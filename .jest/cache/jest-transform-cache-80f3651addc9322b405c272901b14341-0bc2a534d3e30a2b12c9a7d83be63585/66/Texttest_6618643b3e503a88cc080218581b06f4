7088db001c9c11549d69a115de3e7834
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/Text/Text.test.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
var react_native_1 = require("@testing-library/react-native");
var _1 = require("./");
var react_1 = __importDefault(require("react"));
describe('Text Component', function () {
  it('renders correctly with default props', function () {
    var _ref = (0, react_native_1.render)((0, _jsxRuntime.jsx)(_1.Text, {
        title: "Test Title"
      })),
      getByText = _ref.getByText;
    expect(getByText('Test Title')).toBeTruthy();
  });
  it('applies the correct style based on the "h" prop', function () {
    var styles = ['h0', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'h7', 'h8', 'h9', 'h10', 'h11', 'h12'];
    styles.forEach(function (style) {
      var _ref2 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(_1.Text, {
          title: "Test Title",
          h: style
        })),
        getByTestId = _ref2.getByTestId;
      var expectedStyle = _1.textStyles[style];
      var receivedStyle = getByTestId('text-component').props.style[0];
      expect(receivedStyle).toMatchObject(expectedStyle);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF9uYXRpdmVfMSIsInJlcXVpcmUiLCJfMSIsInJlYWN0XzEiLCJfX2ltcG9ydERlZmF1bHQiLCJkZXNjcmliZSIsIml0IiwiX3JlZiIsInJlbmRlciIsIl9qc3hSdW50aW1lIiwianN4IiwiVGV4dCIsInRpdGxlIiwiZ2V0QnlUZXh0IiwiZXhwZWN0IiwidG9CZVRydXRoeSIsInN0eWxlcyIsImZvckVhY2giLCJzdHlsZSIsIl9yZWYyIiwiaCIsImdldEJ5VGVzdElkIiwiZXhwZWN0ZWRTdHlsZSIsInRleHRTdHlsZXMiLCJyZWNlaXZlZFN0eWxlIiwicHJvcHMiLCJ0b01hdGNoT2JqZWN0Il0sInNvdXJjZXMiOlsiL1VzZXJzL3BsYXlyYS9MZWVsYUFpV2ViMy9zcmMvY29tcG9uZW50cy9UZXh0L1RleHQudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtyZW5kZXJ9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJ1xuaW1wb3J0IHtUZXh0LCBoVCwgdGV4dFN0eWxlc30gZnJvbSAnLi8nIC8vIFJlcGxhY2Ugd2l0aCB5b3VyIGFjdHVhbCBmaWxlIHBhdGhcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuZGVzY3JpYmUoJ1RleHQgQ29tcG9uZW50JywgKCkgPT4ge1xuICBpdCgncmVuZGVycyBjb3JyZWN0bHkgd2l0aCBkZWZhdWx0IHByb3BzJywgKCkgPT4ge1xuICAgIGNvbnN0IHtnZXRCeVRleHR9ID0gcmVuZGVyKDxUZXh0IHRpdGxlPVwiVGVzdCBUaXRsZVwiIC8+KVxuICAgIGV4cGVjdChnZXRCeVRleHQoJ1Rlc3QgVGl0bGUnKSkudG9CZVRydXRoeSgpXG4gIH0pXG5cbiAgaXQoJ2FwcGxpZXMgdGhlIGNvcnJlY3Qgc3R5bGUgYmFzZWQgb24gdGhlIFwiaFwiIHByb3AnLCAoKSA9PiB7XG4gICAgY29uc3Qgc3R5bGVzOiBoVFtdID0gW1xuICAgICAgJ2gwJyxcbiAgICAgICdoMScsXG4gICAgICAnaDInLFxuICAgICAgJ2gzJyxcbiAgICAgICdoNCcsXG4gICAgICAnaDUnLFxuICAgICAgJ2g2JyxcbiAgICAgICdoNycsXG4gICAgICAnaDgnLFxuICAgICAgJ2g5JyxcbiAgICAgICdoMTAnLFxuICAgICAgJ2gxMScsXG4gICAgICAnaDEyJyxcbiAgICBdXG4gICAgc3R5bGVzLmZvckVhY2goc3R5bGUgPT4ge1xuICAgICAgY29uc3Qge2dldEJ5VGVzdElkfSA9IHJlbmRlcig8VGV4dCB0aXRsZT1cIlRlc3QgVGl0bGVcIiBoPXtzdHlsZX0gLz4pXG4gICAgICBjb25zdCBleHBlY3RlZFN0eWxlID0gdGV4dFN0eWxlc1tzdHlsZV1cbiAgICAgIGNvbnN0IHJlY2VpdmVkU3R5bGUgPSBnZXRCeVRlc3RJZCgndGV4dC1jb21wb25lbnQnKS5wcm9wcy5zdHlsZVswXVxuXG4gICAgICBleHBlY3QocmVjZWl2ZWRTdHlsZSkudG9NYXRjaE9iamVjdChleHBlY3RlZFN0eWxlKVxuICAgIH0pXG4gIH0pXG59KVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsY0FBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsRUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsT0FBQSxHQUFBQyxlQUFBLENBQUFILE9BQUE7QUFFQUksUUFBUSxDQUFDLGdCQUFnQixFQUFFLFlBQUs7RUFDOUJDLEVBQUUsQ0FBQyxzQ0FBc0MsRUFBRSxZQUFLO0lBQzlDLElBQUFDLElBQUEsR0FBb0IsSUFBQVAsY0FBQSxDQUFBUSxNQUFNLEVBQUMsSUFBQUMsV0FBQSxDQUFBQyxHQUFBLEVBQUNSLEVBQUEsQ0FBQVMsSUFBSTtRQUFDQyxLQUFLLEVBQUM7TUFBWSxFQUFHLENBQUM7TUFBaERDLFNBQVMsR0FBQU4sSUFBQSxDQUFUTSxTQUFTO0lBQ2hCQyxNQUFNLENBQUNELFNBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDRSxVQUFVLEVBQUU7RUFDOUMsQ0FBQyxDQUFDO0VBRUZULEVBQUUsQ0FBQyxpREFBaUQsRUFBRSxZQUFLO0lBQ3pELElBQU1VLE1BQU0sR0FBUyxDQUNuQixJQUFJLEVBQ0osSUFBSSxFQUNKLElBQUksRUFDSixJQUFJLEVBQ0osSUFBSSxFQUNKLElBQUksRUFDSixJQUFJLEVBQ0osSUFBSSxFQUNKLElBQUksRUFDSixJQUFJLEVBQ0osS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLENBQ047SUFDREEsTUFBTSxDQUFDQyxPQUFPLENBQUMsVUFBQUMsS0FBSyxFQUFHO01BQ3JCLElBQUFDLEtBQUEsR0FBc0IsSUFBQW5CLGNBQUEsQ0FBQVEsTUFBTSxFQUFDLElBQUFDLFdBQUEsQ0FBQUMsR0FBQSxFQUFDUixFQUFBLENBQUFTLElBQUk7VUFBQ0MsS0FBSyxFQUFDLFlBQVk7VUFBQ1EsQ0FBQyxFQUFFRjtRQUFNLEVBQUcsQ0FBQztRQUE1REcsV0FBVyxHQUFBRixLQUFBLENBQVhFLFdBQVc7TUFDbEIsSUFBTUMsYUFBYSxHQUFHcEIsRUFBQSxDQUFBcUIsVUFBVSxDQUFDTCxLQUFLLENBQUM7TUFDdkMsSUFBTU0sYUFBYSxHQUFHSCxXQUFXLENBQUMsZ0JBQWdCLENBQUMsQ0FBQ0ksS0FBSyxDQUFDUCxLQUFLLENBQUMsQ0FBQyxDQUFDO01BRWxFSixNQUFNLENBQUNVLGFBQWEsQ0FBQyxDQUFDRSxhQUFhLENBQUNKLGFBQWEsQ0FBQztJQUNwRCxDQUFDLENBQUM7RUFDSixDQUFDLENBQUM7QUFDSixDQUFDLENBQUMifQ==