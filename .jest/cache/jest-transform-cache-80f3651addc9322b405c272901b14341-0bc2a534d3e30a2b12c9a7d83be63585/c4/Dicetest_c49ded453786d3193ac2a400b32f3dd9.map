{"version":3,"names":["_getJestObj","mock","_require","require","View","Object","assign","jest","requireActual","createAnimatedComponent","props","_jsxRuntime","jsx","children","_this","_jsxFileName","_require2","react_1","__importDefault","react_native_1","_1","describe","mockProps","count","players","disabled","canGo","isReported","updateStep","fn","random","it","_ref","render","Dice","getByTestId","expect","toBeDefined"],"sources":["/Users/playra/LeelaAiWeb3/src/components/Dice/Dice.test.tsx"],"sourcesContent":["import React from 'react'\nimport {render, fireEvent} from '@testing-library/react-native'\nimport {Dice, DiceProps} from './' // Replace with the actual path to your Dice component\n\njest.mock('react-native/Libraries/Animated/src/components/Animated', () => {\n  const {View} = require('react-native')\n  return {\n    ...jest.requireActual(\n      'react-native/Libraries/Animated/src/components/Animated',\n    ),\n    createAnimatedComponent: () => {\n      return (props: any) => {\n        return <View {...props}>{props.children}</View>\n      }\n    },\n  }\n})\n\ndescribe('Dice Component', () => {\n  const mockProps: DiceProps = {\n    count: 3,\n    players: 4,\n    disabled: false,\n    canGo: true,\n    isReported: false,\n    updateStep: jest.fn(),\n    random: jest.fn(),\n  }\n\n  it('renders correctly with the provided props', () => {\n    const {getByTestId} = render(<Dice {...mockProps} />)\n    expect(getByTestId('dice-component')).toBeDefined()\n  })\n\n  //   it('calls the random function and updateStep on press when not disabled', () => {\n  //     const {getByTestId} = render(<Dice {...mockProps} />)\n  //     fireEvent.press(getByTestId('dice-component'))\n  //     expect(mockProps.random).toHaveBeenCalledTimes(1)\n  //     expect(mockProps.updateStep).toHaveBeenCalledTimes(1)\n  //   })\n\n  //   it('does not call the random function and updateStep on press when disabled', () => {\n  //     const {getByTestId} = render(<Dice {...mockProps} disabled={true} />)\n  //     fireEvent.press(getByTestId('dice-component'))\n  //     expect(mockProps.random).toHaveBeenCalledTimes(0)\n  //     expect(mockProps.updateStep).toHaveBeenCalledTimes(0)\n  //   })\n\n  //   it('does not call the random function and updateStep on press when canGo is false', () => {\n  //     const {getByTestId} = render(<Dice {...mockProps} canGo={false} />)\n  //     fireEvent.press(getByTestId('dice-component'))\n  //     expect(mockProps.random).toHaveBeenCalledTimes(0)\n  //     expect(mockProps.updateStep).toHaveBeenCalledTimes(0)\n  //   })\n\n  //   it('does not call the random function and updateStep on press when isReported is true', () => {\n  //     const {getByTestId} = render(<Dice {...mockProps} isReported={true} />)\n  //     fireEvent.press(getByTestId('dice-component'))\n  //     expect(mockProps.random).toHaveBeenCalledTimes(0)\n  //     expect(mockProps.updateStep).toHaveBeenCalledTimes(0)\n  //   })\n\n  // Add more tests based on your component's behavior and requirements\n})\n"],"mappings":";;AAIAA,WAAA,GAAKC,IAAI,CAAC,yDAAyD,EAAE,YAAK;EACxE,IAAAC,QAAA,GAAeC,OAAO,CAAC,cAAc,CAAC;IAA/BC,IAAI,GAAAF,QAAA,CAAJE,IAAI;EACX,OAAAC,MAAA,CAAAC,MAAA,KACKC,IAAI,CAACC,aAAa,CACnB,yDAAyD,CAC1D;IACDC,uBAAuB,EAAE,SAAAA,wBAAA,EAAK;MAC5B,OAAO,UAACC,KAAU,EAAI;QACpB,OAAO,IAAAC,WAAA,CAAAC,GAAA,EAACR,IAAI,EAAAC,MAAA,CAAAC,MAAA,KAAKI,KAAK;UAAAG,QAAA,EAAGH,KAAK,CAACG;QAAQ,EAAO,CAAC;MACjD,CAAC;IACH;EAAC;AAEL,CAAC,CAAC;AAAA,IAAAF,WAAA,GAAAR,OAAA;AAAA,IAAAW,KAAA;EAAAC,YAAA;AAAA,SAAAf,YAAA;EAAA,IAAAgB,SAAA,GAAAb,OAAA;IAAAI,IAAA,GAAAS,SAAA,CAAAT,IAAA;EAAAP,WAAA,YAAAA,YAAA;IAAA,OAAAO,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;;;;;;;;;AAhBF,IAAAU,OAAA,GAAAC,eAAA,CAAAf,OAAA;AACA,IAAAgB,cAAA,GAAAhB,OAAA;AACA,IAAAiB,EAAA,GAAAjB,OAAA;AAgBAkB,QAAQ,CAAC,gBAAgB,EAAE,YAAK;EAC9B,IAAMC,SAAS,GAAc;IAC3BC,KAAK,EAAE,CAAC;IACRC,OAAO,EAAE,CAAC;IACVC,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE,IAAI;IACXC,UAAU,EAAE,KAAK;IACjBC,UAAU,EAAErB,IAAI,CAACsB,EAAE,EAAE;IACrBC,MAAM,EAAEvB,IAAI,CAACsB,EAAE;GAChB;EAEDE,EAAE,CAAC,2CAA2C,EAAE,YAAK;IACnD,IAAAC,IAAA,GAAsB,IAAAb,cAAA,CAAAc,MAAM,EAAC,IAAAtB,WAAA,CAAAC,GAAA,EAACQ,EAAA,CAAAc,IAAI,EAAA7B,MAAA,CAAAC,MAAA,KAAKgB,SAAS,CAAC,CAAG,CAAC;MAA9Ca,WAAW,GAAAH,IAAA,CAAXG,WAAW;IAClBC,MAAM,CAACD,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAACE,WAAW,EAAE;EACrD,CAAC,CAAC;AA+BJ,CAAC,CAAC"}