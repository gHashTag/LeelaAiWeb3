{"version":3,"names":["_react","require","_animation","_core","useSharedValue","init","oneWayReadsOnly","arguments","length","undefined","ref","useRef","makeMutable","current","useEffect","cancelAnimation"],"sources":["useSharedValue.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { cancelAnimation } from '../animation';\nimport type { SharedValue } from '../commonTypes';\nimport { makeMutable } from '../core';\n\nexport function useSharedValue<T>(\n  init: T,\n  oneWayReadsOnly = false\n): SharedValue<T> {\n  const ref = useRef<SharedValue<T>>(makeMutable(init, oneWayReadsOnly));\n\n  if (ref.current === null) {\n    ref.current = makeMutable(init, oneWayReadsOnly);\n  }\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      cancelAnimation(ref.current!);\n    };\n  }, []);\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return ref.current!;\n}\n"],"mappings":";;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AAEA,IAAAE,KAAA,GAAAF,OAAA;AAEO,SAASG,cAAcA,CAC5BC,IAAO,EAES;EAAA,IADhBC,eAAe,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAEvB,IAAMG,GAAG,GAAG,IAAAC,aAAM,EAAiB,IAAAC,iBAAW,EAACP,IAAI,EAAEC,eAAe,CAAC,CAAC;EAEtE,IAAII,GAAG,CAACG,OAAO,KAAK,IAAI,EAAE;IACxBH,GAAG,CAACG,OAAO,GAAG,IAAAD,iBAAW,EAACP,IAAI,EAAEC,eAAe,CAAC;EAClD;EAEA,IAAAQ,gBAAS,EAAC,YAAM;IACd,OAAO,YAAM;MAEX,IAAAC,0BAAe,EAACL,GAAG,CAACG,OAAO,CAAE;IAC/B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAGN,OAAOH,GAAG,CAACG,OAAO;AACpB"}