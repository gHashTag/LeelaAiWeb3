{"version":3,"names":["_NativeReanimated","_interopRequireDefault","require","_PlatformChecker","_shareables","IS_JEST","isJest","IS_NATIVE","shouldBeUseWeb","_runOnUIQueue","setupMicrotasks","microtasksQueue","isExecutingMicrotasksQueue","global","queueMicrotask","callback","push","__callMicrotasks","index","length","_maybeFlushUIUpdatesQueue","callMicrotasksOnUIThread","callMicrotasks","exports","runOnUI","worklet","__DEV__","_WORKLET","Error","__workletHash","undefined","_len","arguments","args","Array","_key","NativeReanimatedModule","scheduleOnUI","makeShareableCloneRecursive","apply","queue","forEach","_ref","_ref2","_slicedToArray2","default","_toConsumableArray2","runOnUIImmediately","_len2","_key2","f","runWorkletOnJS","_len3","_key3","runOnJS","fun","_len4","_key4","_len5","_key5","concat","__remoteFunction","_len6","_key6","_scheduleOnJS","makeShareableCloneOnUIRecursive"],"sources":["threads.ts"],"sourcesContent":["import NativeReanimatedModule from './NativeReanimated';\nimport { isJest, shouldBeUseWeb } from './PlatformChecker';\nimport type { ComplexWorkletFunction } from './commonTypes';\nimport {\n  makeShareableCloneOnUIRecursive,\n  makeShareableCloneRecursive,\n} from './shareables';\n\nconst IS_JEST = isJest();\nconst IS_NATIVE = !shouldBeUseWeb();\n\nlet _runOnUIQueue: Array<[ComplexWorkletFunction<any[], any>, any[]]> = [];\n\nexport function setupMicrotasks() {\n  'worklet';\n\n  let microtasksQueue: Array<() => void> = [];\n  let isExecutingMicrotasksQueue = false;\n  global.queueMicrotask = (callback: () => void) => {\n    microtasksQueue.push(callback);\n  };\n\n  global.__callMicrotasks = () => {\n    if (isExecutingMicrotasksQueue) {\n      return;\n    }\n    try {\n      isExecutingMicrotasksQueue = true;\n      for (let index = 0; index < microtasksQueue.length; index += 1) {\n        // we use classic 'for' loop because the size of the currentTasks array may change while executing some of the callbacks due to queueMicrotask calls\n        microtasksQueue[index]();\n      }\n      microtasksQueue = [];\n      global._maybeFlushUIUpdatesQueue();\n    } finally {\n      isExecutingMicrotasksQueue = false;\n    }\n  };\n}\n\nfunction callMicrotasksOnUIThread() {\n  'worklet';\n  global.__callMicrotasks();\n}\n\nexport const callMicrotasks = IS_NATIVE\n  ? callMicrotasksOnUIThread\n  : () => {\n      // on web flushing is a noop as immediates are handled by the browser\n    };\n\n/**\n * Schedule a worklet to execute on the UI runtime. This method does not schedule the work immediately but instead\n * waits for other worklets to be scheduled within the same JS loop. It uses queueMicrotask to schedule all the worklets\n * at once making sure they will run within the same frame boundaries on the UI thread.\n */\nexport function runOnUI<A extends any[], R>(\n  worklet: ComplexWorkletFunction<A, R>\n): (...args: A) => void {\n  'worklet';\n  if (__DEV__ && IS_NATIVE && _WORKLET) {\n    throw new Error(\n      'runOnUI() cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.'\n    );\n  }\n  if (__DEV__ && IS_NATIVE && worklet.__workletHash === undefined) {\n    throw new Error('runOnUI() can only be used on worklets');\n  }\n  return (...args) => {\n    if (IS_JEST) {\n      // Mocking time in Jest is tricky as both requestAnimationFrame and queueMicrotask\n      // callbacks run on the same queue and can be interleaved. There is no way\n      // to flush particular queue in Jest and the only control over mocked timers\n      // is by using jest.advanceTimersByTime() method which advances all types\n      // of timers including immediate and animation callbacks. Ideally we'd like\n      // to have some way here to schedule work along with React updates, but\n      // that's not possible, and hence in Jest environment instead of using scheduling\n      // mechanism we just schedule the work ommiting the queue. This is ok for the\n      // uses that we currently have but may not be ok for future tests that we write.\n      NativeReanimatedModule.scheduleOnUI(\n        makeShareableCloneRecursive(() => {\n          'worklet';\n          worklet(...args);\n        })\n      );\n      return;\n    }\n    if (__DEV__) {\n      // in DEV mode we call shareable conversion here because in case the object\n      // can't be converted, we will get a meaningful stack-trace as opposed to the\n      // situation when conversion is only done via microtask queue. This does not\n      // make the app particularily less efficient as converted objects are cached\n      // and for a given worklet the conversion only happens once.\n      makeShareableCloneRecursive(worklet);\n      makeShareableCloneRecursive(args);\n    }\n    _runOnUIQueue.push([worklet, args]);\n    if (_runOnUIQueue.length === 1) {\n      queueMicrotask(() => {\n        const queue = _runOnUIQueue;\n        _runOnUIQueue = [];\n        NativeReanimatedModule.scheduleOnUI(\n          makeShareableCloneRecursive(() => {\n            'worklet';\n            queue.forEach(([worklet, args]) => {\n              worklet(...args);\n            });\n            callMicrotasks();\n          })\n        );\n      });\n    }\n  };\n}\n\n/**\n * Schedule a worklet to execute on the UI runtime skipping batching mechanism.\n */\nexport function runOnUIImmediately<A extends any[], R>(\n  worklet: ComplexWorkletFunction<A, R>\n): (...args: A) => void {\n  'worklet';\n  if (__DEV__ && IS_NATIVE && _WORKLET) {\n    throw new Error(\n      'runOnUIImmediately() cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.'\n    );\n  }\n  if (__DEV__ && IS_NATIVE && worklet.__workletHash === undefined) {\n    throw new Error('runOnUIImmediately() can only be used on worklets');\n  }\n  return (...args) => {\n    NativeReanimatedModule.scheduleOnUI(\n      makeShareableCloneRecursive(() => {\n        'worklet';\n        worklet(...args);\n      })\n    );\n  };\n}\n\nif (__DEV__ && IS_NATIVE) {\n  const f = () => {\n    'worklet';\n  };\n  // @ts-ignore plugin\n  if (f.__workletHash === undefined) {\n    throw new Error(\n      'Failed to create a worklet. Did you forget to add Reanimated Babel plugin in babel.config.js? See installation docs at https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/installation#babel-plugin.'\n    );\n  }\n}\n\nfunction runWorkletOnJS<A extends any[], R>(\n  worklet: ComplexWorkletFunction<A, R>,\n  ...args: A\n): void {\n  // remote function that calls a worklet synchronously on the JS runtime\n  worklet(...args);\n}\n\nexport function runOnJS<A extends any[], R>(\n  fun: ComplexWorkletFunction<A, R>\n): (...args: A) => void {\n  'worklet';\n  if (!IS_NATIVE || !_WORKLET) {\n    // if we are already on the JS thread, we just schedule the worklet on the JS queue\n    return (...args) => queueMicrotask(args.length ? () => fun(...args) : fun);\n  }\n  if (fun.__workletHash) {\n    // if `fun` is a worklet, we schedule a call of a remote function `runWorkletOnJS`\n    // and pass the worklet as a first argument followed by original arguments\n    return (...args) => runOnJS(runWorkletOnJS<A, R>)(fun, ...args);\n  }\n  if (fun.__remoteFunction) {\n    // in development mode the function provided as `fun` throws an error message\n    // such that when someone accidentally calls it directly on the UI runtime, they\n    // see that they should use `runOnJS` instead. To facilitate that we put the\n    // reference to the original remote function in the `__remoteFunction` property.\n    fun = fun.__remoteFunction;\n  }\n  return (...args) => {\n    _scheduleOnJS(\n      fun,\n      args.length > 0\n        ? (makeShareableCloneOnUIRecursive(args) as unknown as unknown[])\n        : undefined\n    );\n  };\n}\n"],"mappings":"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"}