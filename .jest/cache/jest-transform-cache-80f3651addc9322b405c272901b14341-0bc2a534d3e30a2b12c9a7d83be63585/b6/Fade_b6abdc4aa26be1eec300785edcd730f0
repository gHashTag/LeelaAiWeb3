21b61f3d3e2765c47a66d584e6881e4a
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FadeOutUp = exports.FadeOutRight = exports.FadeOutLeft = exports.FadeOutDown = exports.FadeOut = exports.FadeInUp = exports.FadeInRight = exports.FadeInLeft = exports.FadeInDown = exports.FadeIn = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _animationBuilder = require("../animationBuilder");
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
  if (typeof input !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var FadeIn = function (_ComplexAnimationBuil) {
  (0, _inherits2.default)(FadeIn, _ComplexAnimationBuil);
  var _super = _createSuper(FadeIn);
  function FadeIn() {
    var _this;
    (0, _classCallCheck2.default)(this, FadeIn);
    _this = _super.apply(this, arguments);
    _defineProperty((0, _assertThisInitialized2.default)(_this), "build", function () {
      var delayFunction = _this.getDelayFunction();
      var _this$getAnimationAnd = _this.getAnimationAndConfig(),
        _this$getAnimationAnd2 = (0, _slicedToArray2.default)(_this$getAnimationAnd, 2),
        animation = _this$getAnimationAnd2[0],
        config = _this$getAnimationAnd2[1];
      var callback = _this.callbackV;
      var initialValues = _this.initialValues;
      var delay = _this.getDelay();
      return function () {
        'worklet';

        return {
          animations: {
            opacity: delayFunction(delay, animation(1, config))
          },
          initialValues: Object.assign({
            opacity: 0
          }, initialValues),
          callback: callback
        };
      };
    });
    return _this;
  }
  (0, _createClass2.default)(FadeIn, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FadeIn();
    }
  }]);
  return FadeIn;
}(_animationBuilder.ComplexAnimationBuilder);
exports.FadeIn = FadeIn;
var FadeInRight = function (_ComplexAnimationBuil2) {
  (0, _inherits2.default)(FadeInRight, _ComplexAnimationBuil2);
  var _super2 = _createSuper(FadeInRight);
  function FadeInRight() {
    var _this2;
    (0, _classCallCheck2.default)(this, FadeInRight);
    _this2 = _super2.apply(this, arguments);
    _defineProperty((0, _assertThisInitialized2.default)(_this2), "build", function () {
      var delayFunction = _this2.getDelayFunction();
      var _this2$getAnimationAn = _this2.getAnimationAndConfig(),
        _this2$getAnimationAn2 = (0, _slicedToArray2.default)(_this2$getAnimationAn, 2),
        animation = _this2$getAnimationAn2[0],
        config = _this2$getAnimationAn2[1];
      var callback = _this2.callbackV;
      var initialValues = _this2.initialValues;
      var delay = _this2.getDelay();
      return function () {
        'worklet';

        return {
          animations: {
            opacity: delayFunction(delay, animation(1, config)),
            transform: [{
              translateX: delayFunction(delay, animation(0, config))
            }]
          },
          initialValues: Object.assign({
            opacity: 0,
            transform: [{
              translateX: 25
            }]
          }, initialValues),
          callback: callback
        };
      };
    });
    return _this2;
  }
  (0, _createClass2.default)(FadeInRight, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FadeInRight();
    }
  }]);
  return FadeInRight;
}(_animationBuilder.ComplexAnimationBuilder);
exports.FadeInRight = FadeInRight;
var FadeInLeft = function (_ComplexAnimationBuil3) {
  (0, _inherits2.default)(FadeInLeft, _ComplexAnimationBuil3);
  var _super3 = _createSuper(FadeInLeft);
  function FadeInLeft() {
    var _this3;
    (0, _classCallCheck2.default)(this, FadeInLeft);
    _this3 = _super3.apply(this, arguments);
    _defineProperty((0, _assertThisInitialized2.default)(_this3), "build", function () {
      var delayFunction = _this3.getDelayFunction();
      var _this3$getAnimationAn = _this3.getAnimationAndConfig(),
        _this3$getAnimationAn2 = (0, _slicedToArray2.default)(_this3$getAnimationAn, 2),
        animation = _this3$getAnimationAn2[0],
        config = _this3$getAnimationAn2[1];
      var callback = _this3.callbackV;
      var initialValues = _this3.initialValues;
      var delay = _this3.getDelay();
      return function () {
        'worklet';

        return {
          animations: {
            opacity: delayFunction(delay, animation(1, config)),
            transform: [{
              translateX: delayFunction(delay, animation(0, config))
            }]
          },
          initialValues: Object.assign({
            opacity: 0,
            transform: [{
              translateX: -25
            }]
          }, initialValues),
          callback: callback
        };
      };
    });
    return _this3;
  }
  (0, _createClass2.default)(FadeInLeft, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FadeInLeft();
    }
  }]);
  return FadeInLeft;
}(_animationBuilder.ComplexAnimationBuilder);
exports.FadeInLeft = FadeInLeft;
var FadeInUp = function (_ComplexAnimationBuil4) {
  (0, _inherits2.default)(FadeInUp, _ComplexAnimationBuil4);
  var _super4 = _createSuper(FadeInUp);
  function FadeInUp() {
    var _this4;
    (0, _classCallCheck2.default)(this, FadeInUp);
    _this4 = _super4.apply(this, arguments);
    _defineProperty((0, _assertThisInitialized2.default)(_this4), "build", function () {
      var delayFunction = _this4.getDelayFunction();
      var _this4$getAnimationAn = _this4.getAnimationAndConfig(),
        _this4$getAnimationAn2 = (0, _slicedToArray2.default)(_this4$getAnimationAn, 2),
        animation = _this4$getAnimationAn2[0],
        config = _this4$getAnimationAn2[1];
      var callback = _this4.callbackV;
      var initialValues = _this4.initialValues;
      var delay = _this4.getDelay();
      return function () {
        'worklet';

        return {
          animations: {
            opacity: delayFunction(delay, animation(1, config)),
            transform: [{
              translateY: delayFunction(delay, animation(0, config))
            }]
          },
          initialValues: Object.assign({
            opacity: 0,
            transform: [{
              translateY: -25
            }]
          }, initialValues),
          callback: callback
        };
      };
    });
    return _this4;
  }
  (0, _createClass2.default)(FadeInUp, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FadeInUp();
    }
  }]);
  return FadeInUp;
}(_animationBuilder.ComplexAnimationBuilder);
exports.FadeInUp = FadeInUp;
var FadeInDown = function (_ComplexAnimationBuil5) {
  (0, _inherits2.default)(FadeInDown, _ComplexAnimationBuil5);
  var _super5 = _createSuper(FadeInDown);
  function FadeInDown() {
    var _this5;
    (0, _classCallCheck2.default)(this, FadeInDown);
    _this5 = _super5.apply(this, arguments);
    _defineProperty((0, _assertThisInitialized2.default)(_this5), "build", function () {
      var delayFunction = _this5.getDelayFunction();
      var _this5$getAnimationAn = _this5.getAnimationAndConfig(),
        _this5$getAnimationAn2 = (0, _slicedToArray2.default)(_this5$getAnimationAn, 2),
        animation = _this5$getAnimationAn2[0],
        config = _this5$getAnimationAn2[1];
      var callback = _this5.callbackV;
      var initialValues = _this5.initialValues;
      var delay = _this5.getDelay();
      return function () {
        'worklet';

        return {
          animations: {
            opacity: delayFunction(delay, animation(1, config)),
            transform: [{
              translateY: delayFunction(delay, animation(0, config))
            }]
          },
          initialValues: Object.assign({
            opacity: 0,
            transform: [{
              translateY: 25
            }]
          }, initialValues),
          callback: callback
        };
      };
    });
    return _this5;
  }
  (0, _createClass2.default)(FadeInDown, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FadeInDown();
    }
  }]);
  return FadeInDown;
}(_animationBuilder.ComplexAnimationBuilder);
exports.FadeInDown = FadeInDown;
var FadeOut = function (_ComplexAnimationBuil6) {
  (0, _inherits2.default)(FadeOut, _ComplexAnimationBuil6);
  var _super6 = _createSuper(FadeOut);
  function FadeOut() {
    var _this6;
    (0, _classCallCheck2.default)(this, FadeOut);
    _this6 = _super6.apply(this, arguments);
    _defineProperty((0, _assertThisInitialized2.default)(_this6), "build", function () {
      var delayFunction = _this6.getDelayFunction();
      var _this6$getAnimationAn = _this6.getAnimationAndConfig(),
        _this6$getAnimationAn2 = (0, _slicedToArray2.default)(_this6$getAnimationAn, 2),
        animation = _this6$getAnimationAn2[0],
        config = _this6$getAnimationAn2[1];
      var callback = _this6.callbackV;
      var initialValues = _this6.initialValues;
      var delay = _this6.getDelay();
      return function () {
        'worklet';

        return {
          animations: {
            opacity: delayFunction(delay, animation(0, config))
          },
          initialValues: Object.assign({
            opacity: 1
          }, initialValues),
          callback: callback
        };
      };
    });
    return _this6;
  }
  (0, _createClass2.default)(FadeOut, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FadeOut();
    }
  }]);
  return FadeOut;
}(_animationBuilder.ComplexAnimationBuilder);
exports.FadeOut = FadeOut;
var FadeOutRight = function (_ComplexAnimationBuil7) {
  (0, _inherits2.default)(FadeOutRight, _ComplexAnimationBuil7);
  var _super7 = _createSuper(FadeOutRight);
  function FadeOutRight() {
    var _this7;
    (0, _classCallCheck2.default)(this, FadeOutRight);
    _this7 = _super7.apply(this, arguments);
    _defineProperty((0, _assertThisInitialized2.default)(_this7), "build", function () {
      var delayFunction = _this7.getDelayFunction();
      var _this7$getAnimationAn = _this7.getAnimationAndConfig(),
        _this7$getAnimationAn2 = (0, _slicedToArray2.default)(_this7$getAnimationAn, 2),
        animation = _this7$getAnimationAn2[0],
        config = _this7$getAnimationAn2[1];
      var callback = _this7.callbackV;
      var initialValues = _this7.initialValues;
      var delay = _this7.getDelay();
      return function () {
        'worklet';

        return {
          animations: {
            opacity: delayFunction(delay, animation(0, config)),
            transform: [{
              translateX: delayFunction(delay, animation(25, config))
            }]
          },
          initialValues: Object.assign({
            opacity: 1,
            transform: [{
              translateX: 0
            }]
          }, initialValues),
          callback: callback
        };
      };
    });
    return _this7;
  }
  (0, _createClass2.default)(FadeOutRight, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FadeOutRight();
    }
  }]);
  return FadeOutRight;
}(_animationBuilder.ComplexAnimationBuilder);
exports.FadeOutRight = FadeOutRight;
var FadeOutLeft = function (_ComplexAnimationBuil8) {
  (0, _inherits2.default)(FadeOutLeft, _ComplexAnimationBuil8);
  var _super8 = _createSuper(FadeOutLeft);
  function FadeOutLeft() {
    var _this8;
    (0, _classCallCheck2.default)(this, FadeOutLeft);
    _this8 = _super8.apply(this, arguments);
    _defineProperty((0, _assertThisInitialized2.default)(_this8), "build", function () {
      var delayFunction = _this8.getDelayFunction();
      var _this8$getAnimationAn = _this8.getAnimationAndConfig(),
        _this8$getAnimationAn2 = (0, _slicedToArray2.default)(_this8$getAnimationAn, 2),
        animation = _this8$getAnimationAn2[0],
        config = _this8$getAnimationAn2[1];
      var callback = _this8.callbackV;
      var initialValues = _this8.initialValues;
      var delay = _this8.getDelay();
      return function () {
        'worklet';

        return {
          animations: {
            opacity: delayFunction(delay, animation(0, config)),
            transform: [{
              translateX: delayFunction(delay, animation(-25, config))
            }]
          },
          initialValues: Object.assign({
            opacity: 1,
            transform: [{
              translateX: 0
            }]
          }, initialValues),
          callback: callback
        };
      };
    });
    return _this8;
  }
  (0, _createClass2.default)(FadeOutLeft, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FadeOutLeft();
    }
  }]);
  return FadeOutLeft;
}(_animationBuilder.ComplexAnimationBuilder);
exports.FadeOutLeft = FadeOutLeft;
var FadeOutUp = function (_ComplexAnimationBuil9) {
  (0, _inherits2.default)(FadeOutUp, _ComplexAnimationBuil9);
  var _super9 = _createSuper(FadeOutUp);
  function FadeOutUp() {
    var _this9;
    (0, _classCallCheck2.default)(this, FadeOutUp);
    _this9 = _super9.apply(this, arguments);
    _defineProperty((0, _assertThisInitialized2.default)(_this9), "build", function () {
      var delayFunction = _this9.getDelayFunction();
      var _this9$getAnimationAn = _this9.getAnimationAndConfig(),
        _this9$getAnimationAn2 = (0, _slicedToArray2.default)(_this9$getAnimationAn, 2),
        animation = _this9$getAnimationAn2[0],
        config = _this9$getAnimationAn2[1];
      var callback = _this9.callbackV;
      var initialValues = _this9.initialValues;
      var delay = _this9.getDelay();
      return function () {
        'worklet';

        return {
          animations: {
            opacity: delayFunction(delay, animation(0, config)),
            transform: [{
              translateY: delayFunction(delay, animation(-25, config))
            }]
          },
          initialValues: Object.assign({
            opacity: 1,
            transform: [{
              translateY: 0
            }]
          }, initialValues),
          callback: callback
        };
      };
    });
    return _this9;
  }
  (0, _createClass2.default)(FadeOutUp, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FadeOutUp();
    }
  }]);
  return FadeOutUp;
}(_animationBuilder.ComplexAnimationBuilder);
exports.FadeOutUp = FadeOutUp;
var FadeOutDown = function (_ComplexAnimationBuil10) {
  (0, _inherits2.default)(FadeOutDown, _ComplexAnimationBuil10);
  var _super10 = _createSuper(FadeOutDown);
  function FadeOutDown() {
    var _this10;
    (0, _classCallCheck2.default)(this, FadeOutDown);
    _this10 = _super10.apply(this, arguments);
    _defineProperty((0, _assertThisInitialized2.default)(_this10), "build", function () {
      var delayFunction = _this10.getDelayFunction();
      var _this10$getAnimationA = _this10.getAnimationAndConfig(),
        _this10$getAnimationA2 = (0, _slicedToArray2.default)(_this10$getAnimationA, 2),
        animation = _this10$getAnimationA2[0],
        config = _this10$getAnimationA2[1];
      var callback = _this10.callbackV;
      var initialValues = _this10.initialValues;
      var delay = _this10.getDelay();
      return function () {
        'worklet';

        return {
          animations: {
            opacity: delayFunction(delay, animation(0, config)),
            transform: [{
              translateY: delayFunction(delay, animation(25, config))
            }]
          },
          initialValues: Object.assign({
            opacity: 1,
            transform: [{
              translateY: 0
            }]
          }, initialValues),
          callback: callback
        };
      };
    });
    return _this10;
  }
  (0, _createClass2.default)(FadeOutDown, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new FadeOutDown();
    }
  }]);
  return FadeOutDown;
}(_animationBuilder.ComplexAnimationBuilder);
exports.FadeOutDown = FadeOutDown;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,