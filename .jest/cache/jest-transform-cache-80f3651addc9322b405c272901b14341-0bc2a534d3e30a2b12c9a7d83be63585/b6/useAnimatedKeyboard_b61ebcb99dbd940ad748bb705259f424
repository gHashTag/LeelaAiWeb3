5e4a5104ead9615d0d41294c10cbc764
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useAnimatedKeyboard = useAnimatedKeyboard;
var _react = require("react");
var _core = require("../core");
var _commonTypes = require("../commonTypes");
function useAnimatedKeyboard() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
    isStatusBarTranslucentAndroid: false
  };
  var ref = (0, _react.useRef)(null);
  var listenerId = (0, _react.useRef)(-1);
  var isSubscribed = (0, _react.useRef)(false);
  if (ref.current === null) {
    var keyboardEventData = {
      state: (0, _core.makeMutable)(_commonTypes.KeyboardState.UNKNOWN),
      height: (0, _core.makeMutable)(0)
    };
    listenerId.current = (0, _core.subscribeForKeyboardEvents)(function (state, height) {
      'worklet';

      keyboardEventData.state.value = state;
      keyboardEventData.height.value = height;
    }, options);
    ref.current = keyboardEventData;
    isSubscribed.current = true;
  }
  (0, _react.useEffect)(function () {
    if (isSubscribed.current === false && ref.current !== null) {
      var _keyboardEventData = ref.current;
      listenerId.current = (0, _core.subscribeForKeyboardEvents)(function (state, height) {
        'worklet';

        _keyboardEventData.state.value = state;
        _keyboardEventData.height.value = height;
      }, options);
      isSubscribed.current = true;
    }
    return function () {
      (0, _core.unsubscribeFromKeyboardEvents)(listenerId.current);
      isSubscribed.current = false;
    };
  }, []);
  return ref.current;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJyZXF1aXJlIiwiX2NvcmUiLCJfY29tbW9uVHlwZXMiLCJ1c2VBbmltYXRlZEtleWJvYXJkIiwib3B0aW9ucyIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsImlzU3RhdHVzQmFyVHJhbnNsdWNlbnRBbmRyb2lkIiwicmVmIiwidXNlUmVmIiwibGlzdGVuZXJJZCIsImlzU3Vic2NyaWJlZCIsImN1cnJlbnQiLCJrZXlib2FyZEV2ZW50RGF0YSIsInN0YXRlIiwibWFrZU11dGFibGUiLCJLZXlib2FyZFN0YXRlIiwiVU5LTk9XTiIsImhlaWdodCIsInN1YnNjcmliZUZvcktleWJvYXJkRXZlbnRzIiwidmFsdWUiLCJ1c2VFZmZlY3QiLCJ1bnN1YnNjcmliZUZyb21LZXlib2FyZEV2ZW50cyJdLCJzb3VyY2VzIjpbInVzZUFuaW1hdGVkS2V5Ym9hcmQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICBtYWtlTXV0YWJsZSxcbiAgc3Vic2NyaWJlRm9yS2V5Ym9hcmRFdmVudHMsXG4gIHVuc3Vic2NyaWJlRnJvbUtleWJvYXJkRXZlbnRzLFxufSBmcm9tICcuLi9jb3JlJztcbmltcG9ydCB0eXBlIHtcbiAgQW5pbWF0ZWRLZXlib2FyZEluZm8sXG4gIEFuaW1hdGVkS2V5Ym9hcmRPcHRpb25zLFxufSBmcm9tICcuLi9jb21tb25UeXBlcyc7XG5pbXBvcnQgeyBLZXlib2FyZFN0YXRlIH0gZnJvbSAnLi4vY29tbW9uVHlwZXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlQW5pbWF0ZWRLZXlib2FyZChcbiAgb3B0aW9uczogQW5pbWF0ZWRLZXlib2FyZE9wdGlvbnMgPSB7IGlzU3RhdHVzQmFyVHJhbnNsdWNlbnRBbmRyb2lkOiBmYWxzZSB9XG4pOiBBbmltYXRlZEtleWJvYXJkSW5mbyB7XG4gIGNvbnN0IHJlZiA9IHVzZVJlZjxBbmltYXRlZEtleWJvYXJkSW5mbyB8IG51bGw+KG51bGwpO1xuICBjb25zdCBsaXN0ZW5lcklkID0gdXNlUmVmPG51bWJlcj4oLTEpO1xuICBjb25zdCBpc1N1YnNjcmliZWQgPSB1c2VSZWY8Ym9vbGVhbj4oZmFsc2UpO1xuXG4gIGlmIChyZWYuY3VycmVudCA9PT0gbnVsbCkge1xuICAgIGNvbnN0IGtleWJvYXJkRXZlbnREYXRhOiBBbmltYXRlZEtleWJvYXJkSW5mbyA9IHtcbiAgICAgIHN0YXRlOiBtYWtlTXV0YWJsZTxLZXlib2FyZFN0YXRlPihLZXlib2FyZFN0YXRlLlVOS05PV04pLFxuICAgICAgaGVpZ2h0OiBtYWtlTXV0YWJsZSgwKSxcbiAgICB9O1xuICAgIGxpc3RlbmVySWQuY3VycmVudCA9IHN1YnNjcmliZUZvcktleWJvYXJkRXZlbnRzKChzdGF0ZSwgaGVpZ2h0KSA9PiB7XG4gICAgICAnd29ya2xldCc7XG4gICAgICBrZXlib2FyZEV2ZW50RGF0YS5zdGF0ZS52YWx1ZSA9IHN0YXRlO1xuICAgICAga2V5Ym9hcmRFdmVudERhdGEuaGVpZ2h0LnZhbHVlID0gaGVpZ2h0O1xuICAgIH0sIG9wdGlvbnMpO1xuICAgIHJlZi5jdXJyZW50ID0ga2V5Ym9hcmRFdmVudERhdGE7XG4gICAgaXNTdWJzY3JpYmVkLmN1cnJlbnQgPSB0cnVlO1xuICB9XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGlzU3Vic2NyaWJlZC5jdXJyZW50ID09PSBmYWxzZSAmJiByZWYuY3VycmVudCAhPT0gbnVsbCkge1xuICAgICAgY29uc3Qga2V5Ym9hcmRFdmVudERhdGEgPSByZWYuY3VycmVudDtcbiAgICAgIC8vIHN1YnNjcmliZSBhZ2FpbiBhZnRlciBGYXN0IFJlZnJlc2hcbiAgICAgIGxpc3RlbmVySWQuY3VycmVudCA9IHN1YnNjcmliZUZvcktleWJvYXJkRXZlbnRzKChzdGF0ZSwgaGVpZ2h0KSA9PiB7XG4gICAgICAgICd3b3JrbGV0JztcbiAgICAgICAga2V5Ym9hcmRFdmVudERhdGEuc3RhdGUudmFsdWUgPSBzdGF0ZTtcbiAgICAgICAga2V5Ym9hcmRFdmVudERhdGEuaGVpZ2h0LnZhbHVlID0gaGVpZ2h0O1xuICAgICAgfSwgb3B0aW9ucyk7XG4gICAgICBpc1N1YnNjcmliZWQuY3VycmVudCA9IHRydWU7XG4gICAgfVxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB1bnN1YnNjcmliZUZyb21LZXlib2FyZEV2ZW50cyhsaXN0ZW5lcklkLmN1cnJlbnQpO1xuICAgICAgaXNTdWJzY3JpYmVkLmN1cnJlbnQgPSBmYWxzZTtcbiAgICB9O1xuICB9LCBbXSk7XG4gIHJldHVybiByZWYuY3VycmVudDtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLEtBQUEsR0FBQUQsT0FBQTtBQVNBLElBQUFFLFlBQUEsR0FBQUYsT0FBQTtBQUVPLFNBQVNHLG1CQUFtQkEsQ0FBQSxFQUVYO0VBQUEsSUFEdEJDLE9BQWdDLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxRQUFBRCxTQUFBLFFBQUFFLFNBQUEsR0FBQUYsU0FBQSxNQUFHO0lBQUVHLDZCQUE2QixFQUFFO0VBQU0sQ0FBQztFQUUzRSxJQUFNQyxHQUFHLEdBQUcsSUFBQUMsYUFBTSxFQUE4QixJQUFJLENBQUM7RUFDckQsSUFBTUMsVUFBVSxHQUFHLElBQUFELGFBQU0sRUFBUyxDQUFDLENBQUMsQ0FBQztFQUNyQyxJQUFNRSxZQUFZLEdBQUcsSUFBQUYsYUFBTSxFQUFVLEtBQUssQ0FBQztFQUUzQyxJQUFJRCxHQUFHLENBQUNJLE9BQU8sS0FBSyxJQUFJLEVBQUU7SUFDeEIsSUFBTUMsaUJBQXVDLEdBQUc7TUFDOUNDLEtBQUssRUFBRSxJQUFBQyxpQkFBVyxFQUFnQkMsMEJBQWEsQ0FBQ0MsT0FBTyxDQUFDO01BQ3hEQyxNQUFNLEVBQUUsSUFBQUgsaUJBQVcsRUFBQyxDQUFDO0lBQ3ZCLENBQUM7SUFDREwsVUFBVSxDQUFDRSxPQUFPLEdBQUcsSUFBQU8sZ0NBQTBCLEVBQUMsVUFBQ0wsS0FBSyxFQUFFSSxNQUFNLEVBQUs7TUFDakUsU0FBUzs7TUFDVEwsaUJBQWlCLENBQUNDLEtBQUssQ0FBQ00sS0FBSyxHQUFHTixLQUFLO01BQ3JDRCxpQkFBaUIsQ0FBQ0ssTUFBTSxDQUFDRSxLQUFLLEdBQUdGLE1BQU07SUFDekMsQ0FBQyxFQUFFZixPQUFPLENBQUM7SUFDWEssR0FBRyxDQUFDSSxPQUFPLEdBQUdDLGlCQUFpQjtJQUMvQkYsWUFBWSxDQUFDQyxPQUFPLEdBQUcsSUFBSTtFQUM3QjtFQUNBLElBQUFTLGdCQUFTLEVBQUMsWUFBTTtJQUNkLElBQUlWLFlBQVksQ0FBQ0MsT0FBTyxLQUFLLEtBQUssSUFBSUosR0FBRyxDQUFDSSxPQUFPLEtBQUssSUFBSSxFQUFFO01BQzFELElBQU1DLGtCQUFpQixHQUFHTCxHQUFHLENBQUNJLE9BQU87TUFFckNGLFVBQVUsQ0FBQ0UsT0FBTyxHQUFHLElBQUFPLGdDQUEwQixFQUFDLFVBQUNMLEtBQUssRUFBRUksTUFBTSxFQUFLO1FBQ2pFLFNBQVM7O1FBQ1RMLGtCQUFpQixDQUFDQyxLQUFLLENBQUNNLEtBQUssR0FBR04sS0FBSztRQUNyQ0Qsa0JBQWlCLENBQUNLLE1BQU0sQ0FBQ0UsS0FBSyxHQUFHRixNQUFNO01BQ3pDLENBQUMsRUFBRWYsT0FBTyxDQUFDO01BQ1hRLFlBQVksQ0FBQ0MsT0FBTyxHQUFHLElBQUk7SUFDN0I7SUFDQSxPQUFPLFlBQU07TUFDWCxJQUFBVSxtQ0FBNkIsRUFBQ1osVUFBVSxDQUFDRSxPQUFPLENBQUM7TUFDakRELFlBQVksQ0FBQ0MsT0FBTyxHQUFHLEtBQUs7SUFDOUIsQ0FBQztFQUNILENBQUMsRUFBRSxFQUFFLENBQUM7RUFDTixPQUFPSixHQUFHLENBQUNJLE9BQU87QUFDcEIifQ==