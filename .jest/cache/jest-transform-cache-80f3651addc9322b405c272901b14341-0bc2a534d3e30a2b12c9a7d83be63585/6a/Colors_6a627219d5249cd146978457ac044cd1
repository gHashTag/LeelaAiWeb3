451d71d6048200d69949edde5e2898f4
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RGBtoHSV = RGBtoHSV;
exports.blue = void 0;
exports.convertToRGBA = convertToRGBA;
exports.hsvToColor = exports.green = void 0;
exports.isColor = isColor;
exports.opacity = void 0;
exports.processColor = processColor;
exports.processColorInitially = processColorInitially;
exports.red = void 0;
exports.rgbaArrayToRGBAColor = rgbaArrayToRGBAColor;
exports.rgbaColor = void 0;
exports.toGammaSpace = toGammaSpace;
exports.toLinearSpace = toLinearSpace;
var _core = require("./core");
var _PlatformChecker = require("./PlatformChecker");
var NUMBER = '[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)';
var PERCENTAGE = NUMBER + '%';
function call() {
  'worklet';

  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return '\\(\\s*(' + args.join(')\\s*,\\s*(') + ')\\s*\\)';
}
var MATCHERS = {
  rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),
  rgba: new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER)),
  hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),
  hsla: new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),
  hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex6: /^#([0-9a-fA-F]{6})$/,
  hex8: /^#([0-9a-fA-F]{8})$/
};
function hue2rgb(p, q, t) {
  'worklet';

  if (t < 0) {
    t += 1;
  }
  if (t > 1) {
    t -= 1;
  }
  if (t < 1 / 6) {
    return p + (q - p) * 6 * t;
  }
  if (t < 1 / 2) {
    return q;
  }
  if (t < 2 / 3) {
    return p + (q - p) * (2 / 3 - t) * 6;
  }
  return p;
}
function hslToRgb(h, s, l) {
  'worklet';

  var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
  var p = 2 * l - q;
  var r = hue2rgb(p, q, h + 1 / 3);
  var g = hue2rgb(p, q, h);
  var b = hue2rgb(p, q, h - 1 / 3);
  return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;
}
function parse255(str) {
  'worklet';

  var int = Number.parseInt(str, 10);
  if (int < 0) {
    return 0;
  }
  if (int > 255) {
    return 255;
  }
  return int;
}
function parse360(str) {
  'worklet';

  var int = Number.parseFloat(str);
  return (int % 360 + 360) % 360 / 360;
}
function parse1(str) {
  'worklet';

  var num = Number.parseFloat(str);
  if (num < 0) {
    return 0;
  }
  if (num > 1) {
    return 255;
  }
  return Math.round(num * 255);
}
function parsePercentage(str) {
  'worklet';
  var int = Number.parseFloat(str);
  if (int < 0) {
    return 0;
  }
  if (int > 100) {
    return 1;
  }
  return int / 100;
}
var names = (0, _core.makeShareable)({
  transparent: 0x00000000,
  aliceblue: 0xf0f8ffff,
  antiquewhite: 0xfaebd7ff,
  aqua: 0x00ffffff,
  aquamarine: 0x7fffd4ff,
  azure: 0xf0ffffff,
  beige: 0xf5f5dcff,
  bisque: 0xffe4c4ff,
  black: 0x000000ff,
  blanchedalmond: 0xffebcdff,
  blue: 0x0000ffff,
  blueviolet: 0x8a2be2ff,
  brown: 0xa52a2aff,
  burlywood: 0xdeb887ff,
  burntsienna: 0xea7e5dff,
  cadetblue: 0x5f9ea0ff,
  chartreuse: 0x7fff00ff,
  chocolate: 0xd2691eff,
  coral: 0xff7f50ff,
  cornflowerblue: 0x6495edff,
  cornsilk: 0xfff8dcff,
  crimson: 0xdc143cff,
  cyan: 0x00ffffff,
  darkblue: 0x00008bff,
  darkcyan: 0x008b8bff,
  darkgoldenrod: 0xb8860bff,
  darkgray: 0xa9a9a9ff,
  darkgreen: 0x006400ff,
  darkgrey: 0xa9a9a9ff,
  darkkhaki: 0xbdb76bff,
  darkmagenta: 0x8b008bff,
  darkolivegreen: 0x556b2fff,
  darkorange: 0xff8c00ff,
  darkorchid: 0x9932ccff,
  darkred: 0x8b0000ff,
  darksalmon: 0xe9967aff,
  darkseagreen: 0x8fbc8fff,
  darkslateblue: 0x483d8bff,
  darkslategray: 0x2f4f4fff,
  darkslategrey: 0x2f4f4fff,
  darkturquoise: 0x00ced1ff,
  darkviolet: 0x9400d3ff,
  deeppink: 0xff1493ff,
  deepskyblue: 0x00bfffff,
  dimgray: 0x696969ff,
  dimgrey: 0x696969ff,
  dodgerblue: 0x1e90ffff,
  firebrick: 0xb22222ff,
  floralwhite: 0xfffaf0ff,
  forestgreen: 0x228b22ff,
  fuchsia: 0xff00ffff,
  gainsboro: 0xdcdcdcff,
  ghostwhite: 0xf8f8ffff,
  gold: 0xffd700ff,
  goldenrod: 0xdaa520ff,
  gray: 0x808080ff,
  green: 0x008000ff,
  greenyellow: 0xadff2fff,
  grey: 0x808080ff,
  honeydew: 0xf0fff0ff,
  hotpink: 0xff69b4ff,
  indianred: 0xcd5c5cff,
  indigo: 0x4b0082ff,
  ivory: 0xfffff0ff,
  khaki: 0xf0e68cff,
  lavender: 0xe6e6faff,
  lavenderblush: 0xfff0f5ff,
  lawngreen: 0x7cfc00ff,
  lemonchiffon: 0xfffacdff,
  lightblue: 0xadd8e6ff,
  lightcoral: 0xf08080ff,
  lightcyan: 0xe0ffffff,
  lightgoldenrodyellow: 0xfafad2ff,
  lightgray: 0xd3d3d3ff,
  lightgreen: 0x90ee90ff,
  lightgrey: 0xd3d3d3ff,
  lightpink: 0xffb6c1ff,
  lightsalmon: 0xffa07aff,
  lightseagreen: 0x20b2aaff,
  lightskyblue: 0x87cefaff,
  lightslategray: 0x778899ff,
  lightslategrey: 0x778899ff,
  lightsteelblue: 0xb0c4deff,
  lightyellow: 0xffffe0ff,
  lime: 0x00ff00ff,
  limegreen: 0x32cd32ff,
  linen: 0xfaf0e6ff,
  magenta: 0xff00ffff,
  maroon: 0x800000ff,
  mediumaquamarine: 0x66cdaaff,
  mediumblue: 0x0000cdff,
  mediumorchid: 0xba55d3ff,
  mediumpurple: 0x9370dbff,
  mediumseagreen: 0x3cb371ff,
  mediumslateblue: 0x7b68eeff,
  mediumspringgreen: 0x00fa9aff,
  mediumturquoise: 0x48d1ccff,
  mediumvioletred: 0xc71585ff,
  midnightblue: 0x191970ff,
  mintcream: 0xf5fffaff,
  mistyrose: 0xffe4e1ff,
  moccasin: 0xffe4b5ff,
  navajowhite: 0xffdeadff,
  navy: 0x000080ff,
  oldlace: 0xfdf5e6ff,
  olive: 0x808000ff,
  olivedrab: 0x6b8e23ff,
  orange: 0xffa500ff,
  orangered: 0xff4500ff,
  orchid: 0xda70d6ff,
  palegoldenrod: 0xeee8aaff,
  palegreen: 0x98fb98ff,
  paleturquoise: 0xafeeeeff,
  palevioletred: 0xdb7093ff,
  papayawhip: 0xffefd5ff,
  peachpuff: 0xffdab9ff,
  peru: 0xcd853fff,
  pink: 0xffc0cbff,
  plum: 0xdda0ddff,
  powderblue: 0xb0e0e6ff,
  purple: 0x800080ff,
  rebeccapurple: 0x663399ff,
  red: 0xff0000ff,
  rosybrown: 0xbc8f8fff,
  royalblue: 0x4169e1ff,
  saddlebrown: 0x8b4513ff,
  salmon: 0xfa8072ff,
  sandybrown: 0xf4a460ff,
  seagreen: 0x2e8b57ff,
  seashell: 0xfff5eeff,
  sienna: 0xa0522dff,
  silver: 0xc0c0c0ff,
  skyblue: 0x87ceebff,
  slateblue: 0x6a5acdff,
  slategray: 0x708090ff,
  slategrey: 0x708090ff,
  snow: 0xfffafaff,
  springgreen: 0x00ff7fff,
  steelblue: 0x4682b4ff,
  tan: 0xd2b48cff,
  teal: 0x008080ff,
  thistle: 0xd8bfd8ff,
  tomato: 0xff6347ff,
  turquoise: 0x40e0d0ff,
  violet: 0xee82eeff,
  wheat: 0xf5deb3ff,
  white: 0xffffffff,
  whitesmoke: 0xf5f5f5ff,
  yellow: 0xffff00ff,
  yellowgreen: 0x9acd32ff
});
function normalizeColor(color) {
  'worklet';

  if (typeof color === 'number') {
    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
      return color;
    }
    return null;
  }
  if (typeof color !== 'string') {
    return null;
  }
  var match;
  if (match = MATCHERS.hex6.exec(color)) {
    return Number.parseInt(match[1] + 'ff', 16) >>> 0;
  }
  if (names[color] !== undefined) {
    return names[color];
  }
  if (match = MATCHERS.rgb.exec(color)) {
    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;
  }
  if (match = MATCHERS.rgba.exec(color)) {
    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;
  }
  if (match = MATCHERS.hex3.exec(color)) {
    return Number.parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + 'ff', 16) >>> 0;
  }
  if (match = MATCHERS.hex8.exec(color)) {
    return Number.parseInt(match[1], 16) >>> 0;
  }
  if (match = MATCHERS.hex4.exec(color)) {
    return Number.parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;
  }
  if (match = MATCHERS.hsl.exec(color)) {
    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;
  }
  if (match = MATCHERS.hsla.exec(color)) {
    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;
  }
  return null;
}
var opacity = function opacity(c) {
  'worklet';

  return (c >> 24 & 255) / 255;
};
exports.opacity = opacity;
var red = function red(c) {
  'worklet';

  return c >> 16 & 255;
};
exports.red = red;
var green = function green(c) {
  'worklet';

  return c >> 8 & 255;
};
exports.green = green;
var blue = function blue(c) {
  'worklet';

  return c & 255;
};
exports.blue = blue;
var IS_WEB = (0, _PlatformChecker.isWeb)();
var IS_ANDROID = (0, _PlatformChecker.isAndroid)();
var rgbaColor = function rgbaColor(r, g, b) {
  'worklet';

  var alpha = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
  if (IS_WEB || !_WORKLET) {
    return `rgba(${r}, ${g}, ${b}, ${alpha})`;
  }
  var c = Math.round(alpha * 255) * (1 << 24) + Math.round(r) * (1 << 16) + Math.round(g) * (1 << 8) + Math.round(b);
  if (IS_ANDROID) {
    return c < 1 << 31 >>> 0 ? c : c - 4294967296;
  }
  return c;
};
exports.rgbaColor = rgbaColor;
function RGBtoHSV(r, g, b) {
  'worklet';
  if (arguments.length === 1) {
    g = r.g;
    b = r.b;
    r = r.r;
  }
  var max = Math.max(r, g, b);
  var min = Math.min(r, g, b);
  var d = max - min;
  var s = max === 0 ? 0 : d / max;
  var v = max / 255;
  var h;
  switch (max) {
    default:
    case min:
      h = 0;
      break;
    case r:
      h = g - b + d * (g < b ? 6 : 0);
      h /= 6 * d;
      break;
    case g:
      h = b - r + d * 2;
      h /= 6 * d;
      break;
    case b:
      h = r - g + d * 4;
      h /= 6 * d;
      break;
  }
  return {
    h: h,
    s: s,
    v: v
  };
}
function HSVtoRGB(h, s, v) {
  'worklet';
  var r, g, b, i, f, p, q, t;
  if (arguments.length === 1) {
    s = h.s;
    v = h.v;
    h = h.h;
  }
  i = Math.floor(h * 6);
  f = h * 6 - i;
  p = v * (1 - s);
  q = v * (1 - f * s);
  t = v * (1 - (1 - f) * s);
  switch (i % 6) {
    case 0:
      r = v, g = t, b = p;
      break;
    case 1:
      r = q, g = v, b = p;
      break;
    case 2:
      r = p, g = v, b = t;
      break;
    case 3:
      r = p, g = q, b = v;
      break;
    case 4:
      r = t, g = p, b = v;
      break;
    case 5:
      r = v, g = p, b = q;
      break;
  }
  return {
    r: Math.round(r * 255),
    g: Math.round(g * 255),
    b: Math.round(b * 255)
  };
}
var hsvToColor = function hsvToColor(h, s, v, a) {
  'worklet';

  var _HSVtoRGB = HSVtoRGB(h, s, v),
    r = _HSVtoRGB.r,
    g = _HSVtoRGB.g,
    b = _HSVtoRGB.b;
  return rgbaColor(r, g, b, a);
};
exports.hsvToColor = hsvToColor;
function processColorInitially(color) {
  'worklet';

  if (color === null || color === undefined || typeof color === 'number') {
    return color;
  }
  var normalizedColor = normalizeColor(color);
  if (normalizedColor === null || normalizedColor === undefined) {
    return undefined;
  }
  if (typeof normalizedColor !== 'number') {
    return null;
  }
  normalizedColor = (normalizedColor << 24 | normalizedColor >>> 8) >>> 0;
  return normalizedColor;
}
function isColor(value) {
  'worklet';

  if (typeof value !== 'string') {
    return false;
  }
  return processColorInitially(value) != null;
}
function processColor(color) {
  'worklet';

  var normalizedColor = processColorInitially(color);
  if (normalizedColor === null || normalizedColor === undefined) {
    return undefined;
  }
  if (typeof normalizedColor !== 'number') {
    return null;
  }
  if (IS_ANDROID) {
    normalizedColor = normalizedColor | 0x0;
  }
  return normalizedColor;
}
function convertToRGBA(color) {
  'worklet';

  var processedColor = processColorInitially(color);
  var a = (processedColor >>> 24) / 255;
  var r = (processedColor << 8 >>> 24) / 255;
  var g = (processedColor << 16 >>> 24) / 255;
  var b = (processedColor << 24 >>> 24) / 255;
  return [r, g, b, a];
}
function rgbaArrayToRGBAColor(RGBA) {
  'worklet';

  return `rgba(${Math.round(RGBA[0] * 255)}, ${Math.round(RGBA[1] * 255)}, ${Math.round(RGBA[2] * 255)}, ${RGBA[3]})`;
}
function toLinearSpace(RGBA) {
  'worklet';

  var gamma = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2.2;
  var res = [];
  for (var i = 0; i < 3; ++i) {
    res.push(Math.pow(RGBA[i], gamma));
  }
  res.push(RGBA[3]);
  return res;
}
function toGammaSpace(RGBA) {
  'worklet';

  var gamma = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2.2;
  var res = [];
  for (var i = 0; i < 3; ++i) {
    res.push(Math.pow(RGBA[i], 1 / gamma));
  }
  res.push(RGBA[3]);
  return res;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29yZSIsInJlcXVpcmUiLCJfUGxhdGZvcm1DaGVja2VyIiwiTlVNQkVSIiwiUEVSQ0VOVEFHRSIsImNhbGwiLCJfbGVuIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiYXJncyIsIkFycmF5IiwiX2tleSIsImpvaW4iLCJNQVRDSEVSUyIsInJnYiIsIlJlZ0V4cCIsInJnYmEiLCJoc2wiLCJoc2xhIiwiaGV4MyIsImhleDQiLCJoZXg2IiwiaGV4OCIsImh1ZTJyZ2IiLCJwIiwicSIsInQiLCJoc2xUb1JnYiIsImgiLCJzIiwibCIsInIiLCJnIiwiYiIsIk1hdGgiLCJyb3VuZCIsInBhcnNlMjU1Iiwic3RyIiwiaW50IiwiTnVtYmVyIiwicGFyc2VJbnQiLCJwYXJzZTM2MCIsInBhcnNlRmxvYXQiLCJwYXJzZTEiLCJudW0iLCJwYXJzZVBlcmNlbnRhZ2UiLCJuYW1lcyIsIm1ha2VTaGFyZWFibGUiLCJ0cmFuc3BhcmVudCIsImFsaWNlYmx1ZSIsImFudGlxdWV3aGl0ZSIsImFxdWEiLCJhcXVhbWFyaW5lIiwiYXp1cmUiLCJiZWlnZSIsImJpc3F1ZSIsImJsYWNrIiwiYmxhbmNoZWRhbG1vbmQiLCJibHVlIiwiYmx1ZXZpb2xldCIsImJyb3duIiwiYnVybHl3b29kIiwiYnVybnRzaWVubmEiLCJjYWRldGJsdWUiLCJjaGFydHJldXNlIiwiY2hvY29sYXRlIiwiY29yYWwiLCJjb3JuZmxvd2VyYmx1ZSIsImNvcm5zaWxrIiwiY3JpbXNvbiIsImN5YW4iLCJkYXJrYmx1ZSIsImRhcmtjeWFuIiwiZGFya2dvbGRlbnJvZCIsImRhcmtncmF5IiwiZGFya2dyZWVuIiwiZGFya2dyZXkiLCJkYXJra2hha2kiLCJkYXJrbWFnZW50YSIsImRhcmtvbGl2ZWdyZWVuIiwiZGFya29yYW5nZSIsImRhcmtvcmNoaWQiLCJkYXJrcmVkIiwiZGFya3NhbG1vbiIsImRhcmtzZWFncmVlbiIsImRhcmtzbGF0ZWJsdWUiLCJkYXJrc2xhdGVncmF5IiwiZGFya3NsYXRlZ3JleSIsImRhcmt0dXJxdW9pc2UiLCJkYXJrdmlvbGV0IiwiZGVlcHBpbmsiLCJkZWVwc2t5Ymx1ZSIsImRpbWdyYXkiLCJkaW1ncmV5IiwiZG9kZ2VyYmx1ZSIsImZpcmVicmljayIsImZsb3JhbHdoaXRlIiwiZm9yZXN0Z3JlZW4iLCJmdWNoc2lhIiwiZ2FpbnNib3JvIiwiZ2hvc3R3aGl0ZSIsImdvbGQiLCJnb2xkZW5yb2QiLCJncmF5IiwiZ3JlZW4iLCJncmVlbnllbGxvdyIsImdyZXkiLCJob25leWRldyIsImhvdHBpbmsiLCJpbmRpYW5yZWQiLCJpbmRpZ28iLCJpdm9yeSIsImtoYWtpIiwibGF2ZW5kZXIiLCJsYXZlbmRlcmJsdXNoIiwibGF3bmdyZWVuIiwibGVtb25jaGlmZm9uIiwibGlnaHRibHVlIiwibGlnaHRjb3JhbCIsImxpZ2h0Y3lhbiIsImxpZ2h0Z29sZGVucm9keWVsbG93IiwibGlnaHRncmF5IiwibGlnaHRncmVlbiIsImxpZ2h0Z3JleSIsImxpZ2h0cGluayIsImxpZ2h0c2FsbW9uIiwibGlnaHRzZWFncmVlbiIsImxpZ2h0c2t5Ymx1ZSIsImxpZ2h0c2xhdGVncmF5IiwibGlnaHRzbGF0ZWdyZXkiLCJsaWdodHN0ZWVsYmx1ZSIsImxpZ2h0eWVsbG93IiwibGltZSIsImxpbWVncmVlbiIsImxpbmVuIiwibWFnZW50YSIsIm1hcm9vbiIsIm1lZGl1bWFxdWFtYXJpbmUiLCJtZWRpdW1ibHVlIiwibWVkaXVtb3JjaGlkIiwibWVkaXVtcHVycGxlIiwibWVkaXVtc2VhZ3JlZW4iLCJtZWRpdW1zbGF0ZWJsdWUiLCJtZWRpdW1zcHJpbmdncmVlbiIsIm1lZGl1bXR1cnF1b2lzZSIsIm1lZGl1bXZpb2xldHJlZCIsIm1pZG5pZ2h0Ymx1ZSIsIm1pbnRjcmVhbSIsIm1pc3R5cm9zZSIsIm1vY2Nhc2luIiwibmF2YWpvd2hpdGUiLCJuYXZ5Iiwib2xkbGFjZSIsIm9saXZlIiwib2xpdmVkcmFiIiwib3JhbmdlIiwib3JhbmdlcmVkIiwib3JjaGlkIiwicGFsZWdvbGRlbnJvZCIsInBhbGVncmVlbiIsInBhbGV0dXJxdW9pc2UiLCJwYWxldmlvbGV0cmVkIiwicGFwYXlhd2hpcCIsInBlYWNocHVmZiIsInBlcnUiLCJwaW5rIiwicGx1bSIsInBvd2RlcmJsdWUiLCJwdXJwbGUiLCJyZWJlY2NhcHVycGxlIiwicmVkIiwicm9zeWJyb3duIiwicm95YWxibHVlIiwic2FkZGxlYnJvd24iLCJzYWxtb24iLCJzYW5keWJyb3duIiwic2VhZ3JlZW4iLCJzZWFzaGVsbCIsInNpZW5uYSIsInNpbHZlciIsInNreWJsdWUiLCJzbGF0ZWJsdWUiLCJzbGF0ZWdyYXkiLCJzbGF0ZWdyZXkiLCJzbm93Iiwic3ByaW5nZ3JlZW4iLCJzdGVlbGJsdWUiLCJ0YW4iLCJ0ZWFsIiwidGhpc3RsZSIsInRvbWF0byIsInR1cnF1b2lzZSIsInZpb2xldCIsIndoZWF0Iiwid2hpdGUiLCJ3aGl0ZXNtb2tlIiwieWVsbG93IiwieWVsbG93Z3JlZW4iLCJub3JtYWxpemVDb2xvciIsImNvbG9yIiwibWF0Y2giLCJleGVjIiwidW5kZWZpbmVkIiwib3BhY2l0eSIsImMiLCJleHBvcnRzIiwiSVNfV0VCIiwiaXNXZWIiLCJJU19BTkRST0lEIiwiaXNBbmRyb2lkIiwicmdiYUNvbG9yIiwiYWxwaGEiLCJfV09SS0xFVCIsIlJHQnRvSFNWIiwibWF4IiwibWluIiwiZCIsInYiLCJIU1Z0b1JHQiIsImkiLCJmIiwiZmxvb3IiLCJoc3ZUb0NvbG9yIiwiYSIsIl9IU1Z0b1JHQiIsInByb2Nlc3NDb2xvckluaXRpYWxseSIsIm5vcm1hbGl6ZWRDb2xvciIsImlzQ29sb3IiLCJ2YWx1ZSIsInByb2Nlc3NDb2xvciIsImNvbnZlcnRUb1JHQkEiLCJwcm9jZXNzZWRDb2xvciIsInJnYmFBcnJheVRvUkdCQUNvbG9yIiwiUkdCQSIsInRvTGluZWFyU3BhY2UiLCJnYW1tYSIsInJlcyIsInB1c2giLCJwb3ciLCJ0b0dhbW1hU3BhY2UiXSwic291cmNlcyI6WyJDb2xvcnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3BpZWQgZnJvbTpcbiAqIHJlYWN0LW5hdGl2ZS9MaWJyYXJpZXMvU3R5bGVTaGVldC9ub3JtYWxpemVDb2xvci5qc1xuICogcmVhY3QtbmF0aXZlL0xpYnJhcmllcy9TdHlsZVNoZWV0L3Byb2Nlc3NDb2xvci5qc1xuICogaHR0cHM6Ly9naXRodWIuY29tL3djYW5kaWxsb24vcmVhY3QtbmF0aXZlLXJlZGFzaC9ibG9iL21hc3Rlci9zcmMvQ29sb3JzLnRzXG4gKi9cblxuLyogZXNsaW50IG5vLWJpdHdpc2U6IDAgKi9cbmltcG9ydCB7IG1ha2VTaGFyZWFibGUgfSBmcm9tICcuL2NvcmUnO1xuaW1wb3J0IHsgaXNBbmRyb2lkLCBpc1dlYiB9IGZyb20gJy4vUGxhdGZvcm1DaGVja2VyJztcblxuaW50ZXJmYWNlIFJHQiB7XG4gIHI6IG51bWJlcjtcbiAgZzogbnVtYmVyO1xuICBiOiBudW1iZXI7XG59XG5cbmludGVyZmFjZSBIU1Yge1xuICBoOiBudW1iZXI7XG4gIHM6IG51bWJlcjtcbiAgdjogbnVtYmVyO1xufVxuXG4vLyB2YXIgSU5URUdFUiA9ICdbLStdP1xcXFxkKyc7XG5jb25zdCBOVU1CRVIgPSAnWy0rXT8oPzpcXFxcZCsoPzpcXFxcLlxcXFxkKik/fFxcXFwuXFxcXGQrKSc7XG5jb25zdCBQRVJDRU5UQUdFID0gTlVNQkVSICsgJyUnO1xuXG5mdW5jdGlvbiBjYWxsKC4uLmFyZ3M6IHVua25vd25bXSk6IHN0cmluZyB7XG4gICd3b3JrbGV0JztcbiAgcmV0dXJuICdcXFxcKFxcXFxzKignICsgYXJncy5qb2luKCcpXFxcXHMqLFxcXFxzKignKSArICcpXFxcXHMqXFxcXCknO1xufVxuXG5jb25zdCBNQVRDSEVSUyA9IHtcbiAgcmdiOiBuZXcgUmVnRXhwKCdyZ2InICsgY2FsbChOVU1CRVIsIE5VTUJFUiwgTlVNQkVSKSksXG4gIHJnYmE6IG5ldyBSZWdFeHAoJ3JnYmEnICsgY2FsbChOVU1CRVIsIE5VTUJFUiwgTlVNQkVSLCBOVU1CRVIpKSxcbiAgaHNsOiBuZXcgUmVnRXhwKCdoc2wnICsgY2FsbChOVU1CRVIsIFBFUkNFTlRBR0UsIFBFUkNFTlRBR0UpKSxcbiAgaHNsYTogbmV3IFJlZ0V4cCgnaHNsYScgKyBjYWxsKE5VTUJFUiwgUEVSQ0VOVEFHRSwgUEVSQ0VOVEFHRSwgTlVNQkVSKSksXG4gIGhleDM6IC9eIyhbMC05YS1mQS1GXXsxfSkoWzAtOWEtZkEtRl17MX0pKFswLTlhLWZBLUZdezF9KSQvLFxuICBoZXg0OiAvXiMoWzAtOWEtZkEtRl17MX0pKFswLTlhLWZBLUZdezF9KShbMC05YS1mQS1GXXsxfSkoWzAtOWEtZkEtRl17MX0pJC8sXG4gIGhleDY6IC9eIyhbMC05YS1mQS1GXXs2fSkkLyxcbiAgaGV4ODogL14jKFswLTlhLWZBLUZdezh9KSQvLFxufTtcblxuZnVuY3Rpb24gaHVlMnJnYihwOiBudW1iZXIsIHE6IG51bWJlciwgdDogbnVtYmVyKTogbnVtYmVyIHtcbiAgJ3dvcmtsZXQnO1xuICBpZiAodCA8IDApIHtcbiAgICB0ICs9IDE7XG4gIH1cbiAgaWYgKHQgPiAxKSB7XG4gICAgdCAtPSAxO1xuICB9XG4gIGlmICh0IDwgMSAvIDYpIHtcbiAgICByZXR1cm4gcCArIChxIC0gcCkgKiA2ICogdDtcbiAgfVxuICBpZiAodCA8IDEgLyAyKSB7XG4gICAgcmV0dXJuIHE7XG4gIH1cbiAgaWYgKHQgPCAyIC8gMykge1xuICAgIHJldHVybiBwICsgKHEgLSBwKSAqICgyIC8gMyAtIHQpICogNjtcbiAgfVxuICByZXR1cm4gcDtcbn1cblxuZnVuY3Rpb24gaHNsVG9SZ2IoaDogbnVtYmVyLCBzOiBudW1iZXIsIGw6IG51bWJlcik6IG51bWJlciB7XG4gICd3b3JrbGV0JztcbiAgY29uc3QgcSA9IGwgPCAwLjUgPyBsICogKDEgKyBzKSA6IGwgKyBzIC0gbCAqIHM7XG4gIGNvbnN0IHAgPSAyICogbCAtIHE7XG4gIGNvbnN0IHIgPSBodWUycmdiKHAsIHEsIGggKyAxIC8gMyk7XG4gIGNvbnN0IGcgPSBodWUycmdiKHAsIHEsIGgpO1xuICBjb25zdCBiID0gaHVlMnJnYihwLCBxLCBoIC0gMSAvIDMpO1xuXG4gIHJldHVybiAoXG4gICAgKE1hdGgucm91bmQociAqIDI1NSkgPDwgMjQpIHxcbiAgICAoTWF0aC5yb3VuZChnICogMjU1KSA8PCAxNikgfFxuICAgIChNYXRoLnJvdW5kKGIgKiAyNTUpIDw8IDgpXG4gICk7XG59XG5cbmZ1bmN0aW9uIHBhcnNlMjU1KHN0cjogc3RyaW5nKTogbnVtYmVyIHtcbiAgJ3dvcmtsZXQnO1xuICBjb25zdCBpbnQgPSBOdW1iZXIucGFyc2VJbnQoc3RyLCAxMCk7XG4gIGlmIChpbnQgPCAwKSB7XG4gICAgcmV0dXJuIDA7XG4gIH1cbiAgaWYgKGludCA+IDI1NSkge1xuICAgIHJldHVybiAyNTU7XG4gIH1cbiAgcmV0dXJuIGludDtcbn1cblxuZnVuY3Rpb24gcGFyc2UzNjAoc3RyOiBzdHJpbmcpOiBudW1iZXIge1xuICAnd29ya2xldCc7XG4gIGNvbnN0IGludCA9IE51bWJlci5wYXJzZUZsb2F0KHN0cik7XG4gIHJldHVybiAoKChpbnQgJSAzNjApICsgMzYwKSAlIDM2MCkgLyAzNjA7XG59XG5cbmZ1bmN0aW9uIHBhcnNlMShzdHI6IHN0cmluZyk6IG51bWJlciB7XG4gICd3b3JrbGV0JztcbiAgY29uc3QgbnVtID0gTnVtYmVyLnBhcnNlRmxvYXQoc3RyKTtcbiAgaWYgKG51bSA8IDApIHtcbiAgICByZXR1cm4gMDtcbiAgfVxuICBpZiAobnVtID4gMSkge1xuICAgIHJldHVybiAyNTU7XG4gIH1cbiAgcmV0dXJuIE1hdGgucm91bmQobnVtICogMjU1KTtcbn1cblxuZnVuY3Rpb24gcGFyc2VQZXJjZW50YWdlKHN0cjogc3RyaW5nKTogbnVtYmVyIHtcbiAgJ3dvcmtsZXQnO1xuICAvLyBwYXJzZUZsb2F0IGNvbnZlbmllbnRseSBpZ25vcmVzIHRoZSBmaW5hbCAlXG4gIGNvbnN0IGludCA9IE51bWJlci5wYXJzZUZsb2F0KHN0cik7XG4gIGlmIChpbnQgPCAwKSB7XG4gICAgcmV0dXJuIDA7XG4gIH1cbiAgaWYgKGludCA+IDEwMCkge1xuICAgIHJldHVybiAxO1xuICB9XG4gIHJldHVybiBpbnQgLyAxMDA7XG59XG5cbmNvbnN0IG5hbWVzOiBhbnkgPSBtYWtlU2hhcmVhYmxlKHtcbiAgdHJhbnNwYXJlbnQ6IDB4MDAwMDAwMDAsXG5cbiAgLy8gaHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy1jb2xvci8jc3ZnLWNvbG9yXG4gIGFsaWNlYmx1ZTogMHhmMGY4ZmZmZixcbiAgYW50aXF1ZXdoaXRlOiAweGZhZWJkN2ZmLFxuICBhcXVhOiAweDAwZmZmZmZmLFxuICBhcXVhbWFyaW5lOiAweDdmZmZkNGZmLFxuICBhenVyZTogMHhmMGZmZmZmZixcbiAgYmVpZ2U6IDB4ZjVmNWRjZmYsXG4gIGJpc3F1ZTogMHhmZmU0YzRmZixcbiAgYmxhY2s6IDB4MDAwMDAwZmYsXG4gIGJsYW5jaGVkYWxtb25kOiAweGZmZWJjZGZmLFxuICBibHVlOiAweDAwMDBmZmZmLFxuICBibHVldmlvbGV0OiAweDhhMmJlMmZmLFxuICBicm93bjogMHhhNTJhMmFmZixcbiAgYnVybHl3b29kOiAweGRlYjg4N2ZmLFxuICBidXJudHNpZW5uYTogMHhlYTdlNWRmZixcbiAgY2FkZXRibHVlOiAweDVmOWVhMGZmLFxuICBjaGFydHJldXNlOiAweDdmZmYwMGZmLFxuICBjaG9jb2xhdGU6IDB4ZDI2OTFlZmYsXG4gIGNvcmFsOiAweGZmN2Y1MGZmLFxuICBjb3JuZmxvd2VyYmx1ZTogMHg2NDk1ZWRmZixcbiAgY29ybnNpbGs6IDB4ZmZmOGRjZmYsXG4gIGNyaW1zb246IDB4ZGMxNDNjZmYsXG4gIGN5YW46IDB4MDBmZmZmZmYsXG4gIGRhcmtibHVlOiAweDAwMDA4YmZmLFxuICBkYXJrY3lhbjogMHgwMDhiOGJmZixcbiAgZGFya2dvbGRlbnJvZDogMHhiODg2MGJmZixcbiAgZGFya2dyYXk6IDB4YTlhOWE5ZmYsXG4gIGRhcmtncmVlbjogMHgwMDY0MDBmZixcbiAgZGFya2dyZXk6IDB4YTlhOWE5ZmYsXG4gIGRhcmtraGFraTogMHhiZGI3NmJmZixcbiAgZGFya21hZ2VudGE6IDB4OGIwMDhiZmYsXG4gIGRhcmtvbGl2ZWdyZWVuOiAweDU1NmIyZmZmLFxuICBkYXJrb3JhbmdlOiAweGZmOGMwMGZmLFxuICBkYXJrb3JjaGlkOiAweDk5MzJjY2ZmLFxuICBkYXJrcmVkOiAweDhiMDAwMGZmLFxuICBkYXJrc2FsbW9uOiAweGU5OTY3YWZmLFxuICBkYXJrc2VhZ3JlZW46IDB4OGZiYzhmZmYsXG4gIGRhcmtzbGF0ZWJsdWU6IDB4NDgzZDhiZmYsXG4gIGRhcmtzbGF0ZWdyYXk6IDB4MmY0ZjRmZmYsXG4gIGRhcmtzbGF0ZWdyZXk6IDB4MmY0ZjRmZmYsXG4gIGRhcmt0dXJxdW9pc2U6IDB4MDBjZWQxZmYsXG4gIGRhcmt2aW9sZXQ6IDB4OTQwMGQzZmYsXG4gIGRlZXBwaW5rOiAweGZmMTQ5M2ZmLFxuICBkZWVwc2t5Ymx1ZTogMHgwMGJmZmZmZixcbiAgZGltZ3JheTogMHg2OTY5NjlmZixcbiAgZGltZ3JleTogMHg2OTY5NjlmZixcbiAgZG9kZ2VyYmx1ZTogMHgxZTkwZmZmZixcbiAgZmlyZWJyaWNrOiAweGIyMjIyMmZmLFxuICBmbG9yYWx3aGl0ZTogMHhmZmZhZjBmZixcbiAgZm9yZXN0Z3JlZW46IDB4MjI4YjIyZmYsXG4gIGZ1Y2hzaWE6IDB4ZmYwMGZmZmYsXG4gIGdhaW5zYm9ybzogMHhkY2RjZGNmZixcbiAgZ2hvc3R3aGl0ZTogMHhmOGY4ZmZmZixcbiAgZ29sZDogMHhmZmQ3MDBmZixcbiAgZ29sZGVucm9kOiAweGRhYTUyMGZmLFxuICBncmF5OiAweDgwODA4MGZmLFxuICBncmVlbjogMHgwMDgwMDBmZixcbiAgZ3JlZW55ZWxsb3c6IDB4YWRmZjJmZmYsXG4gIGdyZXk6IDB4ODA4MDgwZmYsXG4gIGhvbmV5ZGV3OiAweGYwZmZmMGZmLFxuICBob3RwaW5rOiAweGZmNjliNGZmLFxuICBpbmRpYW5yZWQ6IDB4Y2Q1YzVjZmYsXG4gIGluZGlnbzogMHg0YjAwODJmZixcbiAgaXZvcnk6IDB4ZmZmZmYwZmYsXG4gIGtoYWtpOiAweGYwZTY4Y2ZmLFxuICBsYXZlbmRlcjogMHhlNmU2ZmFmZixcbiAgbGF2ZW5kZXJibHVzaDogMHhmZmYwZjVmZixcbiAgbGF3bmdyZWVuOiAweDdjZmMwMGZmLFxuICBsZW1vbmNoaWZmb246IDB4ZmZmYWNkZmYsXG4gIGxpZ2h0Ymx1ZTogMHhhZGQ4ZTZmZixcbiAgbGlnaHRjb3JhbDogMHhmMDgwODBmZixcbiAgbGlnaHRjeWFuOiAweGUwZmZmZmZmLFxuICBsaWdodGdvbGRlbnJvZHllbGxvdzogMHhmYWZhZDJmZixcbiAgbGlnaHRncmF5OiAweGQzZDNkM2ZmLFxuICBsaWdodGdyZWVuOiAweDkwZWU5MGZmLFxuICBsaWdodGdyZXk6IDB4ZDNkM2QzZmYsXG4gIGxpZ2h0cGluazogMHhmZmI2YzFmZixcbiAgbGlnaHRzYWxtb246IDB4ZmZhMDdhZmYsXG4gIGxpZ2h0c2VhZ3JlZW46IDB4MjBiMmFhZmYsXG4gIGxpZ2h0c2t5Ymx1ZTogMHg4N2NlZmFmZixcbiAgbGlnaHRzbGF0ZWdyYXk6IDB4Nzc4ODk5ZmYsXG4gIGxpZ2h0c2xhdGVncmV5OiAweDc3ODg5OWZmLFxuICBsaWdodHN0ZWVsYmx1ZTogMHhiMGM0ZGVmZixcbiAgbGlnaHR5ZWxsb3c6IDB4ZmZmZmUwZmYsXG4gIGxpbWU6IDB4MDBmZjAwZmYsXG4gIGxpbWVncmVlbjogMHgzMmNkMzJmZixcbiAgbGluZW46IDB4ZmFmMGU2ZmYsXG4gIG1hZ2VudGE6IDB4ZmYwMGZmZmYsXG4gIG1hcm9vbjogMHg4MDAwMDBmZixcbiAgbWVkaXVtYXF1YW1hcmluZTogMHg2NmNkYWFmZixcbiAgbWVkaXVtYmx1ZTogMHgwMDAwY2RmZixcbiAgbWVkaXVtb3JjaGlkOiAweGJhNTVkM2ZmLFxuICBtZWRpdW1wdXJwbGU6IDB4OTM3MGRiZmYsXG4gIG1lZGl1bXNlYWdyZWVuOiAweDNjYjM3MWZmLFxuICBtZWRpdW1zbGF0ZWJsdWU6IDB4N2I2OGVlZmYsXG4gIG1lZGl1bXNwcmluZ2dyZWVuOiAweDAwZmE5YWZmLFxuICBtZWRpdW10dXJxdW9pc2U6IDB4NDhkMWNjZmYsXG4gIG1lZGl1bXZpb2xldHJlZDogMHhjNzE1ODVmZixcbiAgbWlkbmlnaHRibHVlOiAweDE5MTk3MGZmLFxuICBtaW50Y3JlYW06IDB4ZjVmZmZhZmYsXG4gIG1pc3R5cm9zZTogMHhmZmU0ZTFmZixcbiAgbW9jY2FzaW46IDB4ZmZlNGI1ZmYsXG4gIG5hdmFqb3doaXRlOiAweGZmZGVhZGZmLFxuICBuYXZ5OiAweDAwMDA4MGZmLFxuICBvbGRsYWNlOiAweGZkZjVlNmZmLFxuICBvbGl2ZTogMHg4MDgwMDBmZixcbiAgb2xpdmVkcmFiOiAweDZiOGUyM2ZmLFxuICBvcmFuZ2U6IDB4ZmZhNTAwZmYsXG4gIG9yYW5nZXJlZDogMHhmZjQ1MDBmZixcbiAgb3JjaGlkOiAweGRhNzBkNmZmLFxuICBwYWxlZ29sZGVucm9kOiAweGVlZThhYWZmLFxuICBwYWxlZ3JlZW46IDB4OThmYjk4ZmYsXG4gIHBhbGV0dXJxdW9pc2U6IDB4YWZlZWVlZmYsXG4gIHBhbGV2aW9sZXRyZWQ6IDB4ZGI3MDkzZmYsXG4gIHBhcGF5YXdoaXA6IDB4ZmZlZmQ1ZmYsXG4gIHBlYWNocHVmZjogMHhmZmRhYjlmZixcbiAgcGVydTogMHhjZDg1M2ZmZixcbiAgcGluazogMHhmZmMwY2JmZixcbiAgcGx1bTogMHhkZGEwZGRmZixcbiAgcG93ZGVyYmx1ZTogMHhiMGUwZTZmZixcbiAgcHVycGxlOiAweDgwMDA4MGZmLFxuICByZWJlY2NhcHVycGxlOiAweDY2MzM5OWZmLFxuICByZWQ6IDB4ZmYwMDAwZmYsXG4gIHJvc3licm93bjogMHhiYzhmOGZmZixcbiAgcm95YWxibHVlOiAweDQxNjllMWZmLFxuICBzYWRkbGVicm93bjogMHg4YjQ1MTNmZixcbiAgc2FsbW9uOiAweGZhODA3MmZmLFxuICBzYW5keWJyb3duOiAweGY0YTQ2MGZmLFxuICBzZWFncmVlbjogMHgyZThiNTdmZixcbiAgc2Vhc2hlbGw6IDB4ZmZmNWVlZmYsXG4gIHNpZW5uYTogMHhhMDUyMmRmZixcbiAgc2lsdmVyOiAweGMwYzBjMGZmLFxuICBza3libHVlOiAweDg3Y2VlYmZmLFxuICBzbGF0ZWJsdWU6IDB4NmE1YWNkZmYsXG4gIHNsYXRlZ3JheTogMHg3MDgwOTBmZixcbiAgc2xhdGVncmV5OiAweDcwODA5MGZmLFxuICBzbm93OiAweGZmZmFmYWZmLFxuICBzcHJpbmdncmVlbjogMHgwMGZmN2ZmZixcbiAgc3RlZWxibHVlOiAweDQ2ODJiNGZmLFxuICB0YW46IDB4ZDJiNDhjZmYsXG4gIHRlYWw6IDB4MDA4MDgwZmYsXG4gIHRoaXN0bGU6IDB4ZDhiZmQ4ZmYsXG4gIHRvbWF0bzogMHhmZjYzNDdmZixcbiAgdHVycXVvaXNlOiAweDQwZTBkMGZmLFxuICB2aW9sZXQ6IDB4ZWU4MmVlZmYsXG4gIHdoZWF0OiAweGY1ZGViM2ZmLFxuICB3aGl0ZTogMHhmZmZmZmZmZixcbiAgd2hpdGVzbW9rZTogMHhmNWY1ZjVmZixcbiAgeWVsbG93OiAweGZmZmYwMGZmLFxuICB5ZWxsb3dncmVlbjogMHg5YWNkMzJmZixcbn0pO1xuXG5mdW5jdGlvbiBub3JtYWxpemVDb2xvcihjb2xvcjogdW5rbm93bik6IG51bWJlciB8IG51bGwge1xuICAnd29ya2xldCc7XG5cbiAgaWYgKHR5cGVvZiBjb2xvciA9PT0gJ251bWJlcicpIHtcbiAgICBpZiAoY29sb3IgPj4+IDAgPT09IGNvbG9yICYmIGNvbG9yID49IDAgJiYgY29sb3IgPD0gMHhmZmZmZmZmZikge1xuICAgICAgcmV0dXJuIGNvbG9yO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgY29sb3IgIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBsZXQgbWF0Y2g6IFJlZ0V4cEV4ZWNBcnJheSB8IG51bGwgfCB1bmRlZmluZWQ7XG5cbiAgLy8gT3JkZXJlZCBiYXNlZCBvbiBvY2N1cnJlbmNlcyBvbiBGYWNlYm9vayBjb2RlYmFzZVxuICBpZiAoKG1hdGNoID0gTUFUQ0hFUlMuaGV4Ni5leGVjKGNvbG9yKSkpIHtcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlSW50KG1hdGNoWzFdICsgJ2ZmJywgMTYpID4+PiAwO1xuICB9XG5cbiAgaWYgKG5hbWVzW2NvbG9yXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIG5hbWVzW2NvbG9yXTtcbiAgfVxuXG4gIGlmICgobWF0Y2ggPSBNQVRDSEVSUy5yZ2IuZXhlYyhjb2xvcikpKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIC8vIGJcbiAgICAgICgocGFyc2UyNTUobWF0Y2hbMV0pIDw8IDI0KSB8IC8vIHJcbiAgICAgICAgKHBhcnNlMjU1KG1hdGNoWzJdKSA8PCAxNikgfCAvLyBnXG4gICAgICAgIChwYXJzZTI1NShtYXRjaFszXSkgPDwgOCkgfFxuICAgICAgICAweDAwMDAwMGZmKSA+Pj4gLy8gYVxuICAgICAgMFxuICAgICk7XG4gIH1cblxuICBpZiAoKG1hdGNoID0gTUFUQ0hFUlMucmdiYS5leGVjKGNvbG9yKSkpIHtcbiAgICByZXR1cm4gKFxuICAgICAgLy8gYlxuICAgICAgKChwYXJzZTI1NShtYXRjaFsxXSkgPDwgMjQpIHwgLy8gclxuICAgICAgICAocGFyc2UyNTUobWF0Y2hbMl0pIDw8IDE2KSB8IC8vIGdcbiAgICAgICAgKHBhcnNlMjU1KG1hdGNoWzNdKSA8PCA4KSB8XG4gICAgICAgIHBhcnNlMShtYXRjaFs0XSkpID4+PiAvLyBhXG4gICAgICAwXG4gICAgKTtcbiAgfVxuXG4gIGlmICgobWF0Y2ggPSBNQVRDSEVSUy5oZXgzLmV4ZWMoY29sb3IpKSkge1xuICAgIHJldHVybiAoXG4gICAgICBOdW1iZXIucGFyc2VJbnQoXG4gICAgICAgIG1hdGNoWzFdICtcbiAgICAgICAgICBtYXRjaFsxXSArIC8vIHJcbiAgICAgICAgICBtYXRjaFsyXSArXG4gICAgICAgICAgbWF0Y2hbMl0gKyAvLyBnXG4gICAgICAgICAgbWF0Y2hbM10gK1xuICAgICAgICAgIG1hdGNoWzNdICsgLy8gYlxuICAgICAgICAgICdmZicsIC8vIGFcbiAgICAgICAgMTZcbiAgICAgICkgPj4+IDBcbiAgICApO1xuICB9XG5cbiAgLy8gaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy1jb2xvci00LyNoZXgtbm90YXRpb25cbiAgaWYgKChtYXRjaCA9IE1BVENIRVJTLmhleDguZXhlYyhjb2xvcikpKSB7XG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUludChtYXRjaFsxXSwgMTYpID4+PiAwO1xuICB9XG5cbiAgaWYgKChtYXRjaCA9IE1BVENIRVJTLmhleDQuZXhlYyhjb2xvcikpKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIE51bWJlci5wYXJzZUludChcbiAgICAgICAgbWF0Y2hbMV0gK1xuICAgICAgICAgIG1hdGNoWzFdICsgLy8gclxuICAgICAgICAgIG1hdGNoWzJdICtcbiAgICAgICAgICBtYXRjaFsyXSArIC8vIGdcbiAgICAgICAgICBtYXRjaFszXSArXG4gICAgICAgICAgbWF0Y2hbM10gKyAvLyBiXG4gICAgICAgICAgbWF0Y2hbNF0gK1xuICAgICAgICAgIG1hdGNoWzRdLCAvLyBhXG4gICAgICAgIDE2XG4gICAgICApID4+PiAwXG4gICAgKTtcbiAgfVxuXG4gIGlmICgobWF0Y2ggPSBNQVRDSEVSUy5oc2wuZXhlYyhjb2xvcikpKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIChoc2xUb1JnYihcbiAgICAgICAgcGFyc2UzNjAobWF0Y2hbMV0pLCAvLyBoXG4gICAgICAgIHBhcnNlUGVyY2VudGFnZShtYXRjaFsyXSksIC8vIHNcbiAgICAgICAgcGFyc2VQZXJjZW50YWdlKG1hdGNoWzNdKSAvLyBsXG4gICAgICApIHxcbiAgICAgICAgMHgwMDAwMDBmZikgPj4+IC8vIGFcbiAgICAgIDBcbiAgICApO1xuICB9XG5cbiAgaWYgKChtYXRjaCA9IE1BVENIRVJTLmhzbGEuZXhlYyhjb2xvcikpKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIChoc2xUb1JnYihcbiAgICAgICAgcGFyc2UzNjAobWF0Y2hbMV0pLCAvLyBoXG4gICAgICAgIHBhcnNlUGVyY2VudGFnZShtYXRjaFsyXSksIC8vIHNcbiAgICAgICAgcGFyc2VQZXJjZW50YWdlKG1hdGNoWzNdKSAvLyBsXG4gICAgICApIHxcbiAgICAgICAgcGFyc2UxKG1hdGNoWzRdKSkgPj4+IC8vIGFcbiAgICAgIDBcbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG5cbmV4cG9ydCBjb25zdCBvcGFjaXR5ID0gKGM6IG51bWJlcik6IG51bWJlciA9PiB7XG4gICd3b3JrbGV0JztcbiAgcmV0dXJuICgoYyA+PiAyNCkgJiAyNTUpIC8gMjU1O1xufTtcblxuZXhwb3J0IGNvbnN0IHJlZCA9IChjOiBudW1iZXIpOiBudW1iZXIgPT4ge1xuICAnd29ya2xldCc7XG4gIHJldHVybiAoYyA+PiAxNikgJiAyNTU7XG59O1xuXG5leHBvcnQgY29uc3QgZ3JlZW4gPSAoYzogbnVtYmVyKTogbnVtYmVyID0+IHtcbiAgJ3dvcmtsZXQnO1xuICByZXR1cm4gKGMgPj4gOCkgJiAyNTU7XG59O1xuXG5leHBvcnQgY29uc3QgYmx1ZSA9IChjOiBudW1iZXIpOiBudW1iZXIgPT4ge1xuICAnd29ya2xldCc7XG4gIHJldHVybiBjICYgMjU1O1xufTtcblxuY29uc3QgSVNfV0VCID0gaXNXZWIoKTtcbmNvbnN0IElTX0FORFJPSUQgPSBpc0FuZHJvaWQoKTtcblxuZXhwb3J0IGNvbnN0IHJnYmFDb2xvciA9IChcbiAgcjogbnVtYmVyLFxuICBnOiBudW1iZXIsXG4gIGI6IG51bWJlcixcbiAgYWxwaGEgPSAxXG4pOiBudW1iZXIgfCBzdHJpbmcgPT4ge1xuICAnd29ya2xldCc7XG4gIGlmIChJU19XRUIgfHwgIV9XT1JLTEVUKSB7XG4gICAgcmV0dXJuIGByZ2JhKCR7cn0sICR7Z30sICR7Yn0sICR7YWxwaGF9KWA7XG4gIH1cblxuICBjb25zdCBjID1cbiAgICBNYXRoLnJvdW5kKGFscGhhICogMjU1KSAqICgxIDw8IDI0KSArXG4gICAgTWF0aC5yb3VuZChyKSAqICgxIDw8IDE2KSArXG4gICAgTWF0aC5yb3VuZChnKSAqICgxIDw8IDgpICtcbiAgICBNYXRoLnJvdW5kKGIpO1xuICBpZiAoSVNfQU5EUk9JRCkge1xuICAgIC8vIG9uIEFuZHJvaWQgY29sb3IgaXMgcmVwcmVzZW50ZWQgYXMgc2lnbmVkIDMyIGJpdCBpbnRcbiAgICByZXR1cm4gYyA8ICgxIDw8IDMxKSA+Pj4gMCA/IGMgOiBjIC0gNDI5NDk2NzI5NjsgLy8gNDI5NDk2NzI5NiA9PSBNYXRoLnBvdygyLCAzMik7XG4gIH1cbiAgcmV0dXJuIGM7XG59O1xuXG4vKiBhY2NlcHRzIHBhcmFtZXRlcnNcbiAqIHIgIE9iamVjdCA9IHtyOngsIGc6eSwgYjp6fVxuICogT1JcbiAqIHIsIGcsIGJcbiAqIDAgPD0gciwgZywgYiA8PSAyNTVcbiAqIHJldHVybnMgMCA8PSBoLCBzLCB2IDw9IDFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIFJHQnRvSFNWKHJnYjogUkdCKTogSFNWO1xuZXhwb3J0IGZ1bmN0aW9uIFJHQnRvSFNWKHI6IG51bWJlciwgZzogbnVtYmVyLCBiOiBudW1iZXIpOiBIU1Y7XG5leHBvcnQgZnVuY3Rpb24gUkdCdG9IU1YocjogYW55LCBnPzogYW55LCBiPzogYW55KTogSFNWIHtcbiAgJ3dvcmtsZXQnO1xuICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgIGcgPSByLmc7XG4gICAgYiA9IHIuYjtcbiAgICByID0gci5yO1xuICB9XG4gIGNvbnN0IG1heCA9IE1hdGgubWF4KHIsIGcsIGIpO1xuICBjb25zdCBtaW4gPSBNYXRoLm1pbihyLCBnLCBiKTtcbiAgY29uc3QgZCA9IG1heCAtIG1pbjtcbiAgY29uc3QgcyA9IG1heCA9PT0gMCA/IDAgOiBkIC8gbWF4O1xuICBjb25zdCB2ID0gbWF4IC8gMjU1O1xuXG4gIGxldCBoO1xuXG4gIHN3aXRjaCAobWF4KSB7XG4gICAgZGVmYXVsdDpcbiAgICAvKiBmYWxsdGhyb3VnaCAqL1xuICAgIGNhc2UgbWluOlxuICAgICAgaCA9IDA7XG4gICAgICBicmVhaztcbiAgICBjYXNlIHI6XG4gICAgICBoID0gZyAtIGIgKyBkICogKGcgPCBiID8gNiA6IDApO1xuICAgICAgaCAvPSA2ICogZDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgZzpcbiAgICAgIGggPSBiIC0gciArIGQgKiAyO1xuICAgICAgaCAvPSA2ICogZDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgYjpcbiAgICAgIGggPSByIC0gZyArIGQgKiA0O1xuICAgICAgaCAvPSA2ICogZDtcbiAgICAgIGJyZWFrO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBoOiBoLFxuICAgIHM6IHMsXG4gICAgdjogdixcbiAgfTtcbiAgLyogZXNsaW50LWVuYWJsZSAqL1xufVxuXG4vKiBhY2NlcHRzIHBhcmFtZXRlcnNcbiAqIGggIE9iamVjdCA9IHtoOngsIHM6eSwgdjp6fVxuICogT1JcbiAqIGgsIHMsIHZcbiAqIDAgPD0gaCwgcywgdiA8PSAxXG4gKiByZXR1cm5zIDAgPD0gciwgZywgYiA8PSAyNTVcbiAqL1xuZnVuY3Rpb24gSFNWdG9SR0IoaHN2OiBIU1YpOiBSR0I7XG5mdW5jdGlvbiBIU1Z0b1JHQihoOiBudW1iZXIsIHM6IG51bWJlciwgdjogbnVtYmVyKTogUkdCO1xuZnVuY3Rpb24gSFNWdG9SR0IoaDogYW55LCBzPzogYW55LCB2PzogYW55KSB7XG4gICd3b3JrbGV0JztcbiAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgdmFyIHIsIGcsIGIsIGksIGYsIHAsIHEsIHQ7XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgcyA9IGgucztcbiAgICB2ID0gaC52O1xuICAgIGggPSBoLmg7XG4gIH1cbiAgaSA9IE1hdGguZmxvb3IoaCAqIDYpO1xuICBmID0gaCAqIDYgLSBpO1xuICBwID0gdiAqICgxIC0gcyk7XG4gIHEgPSB2ICogKDEgLSBmICogcyk7XG4gIHQgPSB2ICogKDEgLSAoMSAtIGYpICogcyk7XG4gIHN3aXRjaCAoaSAlIDYpIHtcbiAgICBjYXNlIDA6XG4gICAgICAociA9IHYpLCAoZyA9IHQpLCAoYiA9IHApO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAxOlxuICAgICAgKHIgPSBxKSwgKGcgPSB2KSwgKGIgPSBwKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMjpcbiAgICAgIChyID0gcCksIChnID0gdiksIChiID0gdCk7XG4gICAgICBicmVhaztcbiAgICBjYXNlIDM6XG4gICAgICAociA9IHApLCAoZyA9IHEpLCAoYiA9IHYpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSA0OlxuICAgICAgKHIgPSB0KSwgKGcgPSBwKSwgKGIgPSB2KTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgNTpcbiAgICAgIChyID0gdiksIChnID0gcCksIChiID0gcSk7XG4gICAgICBicmVhaztcbiAgfVxuICByZXR1cm4ge1xuICAgIHI6IE1hdGgucm91bmQociAqIDI1NSksXG4gICAgZzogTWF0aC5yb3VuZChnICogMjU1KSxcbiAgICBiOiBNYXRoLnJvdW5kKGIgKiAyNTUpLFxuICB9O1xuICAvKiBlc2xpbnQtZW5hYmxlICovXG59XG5cbmV4cG9ydCBjb25zdCBoc3ZUb0NvbG9yID0gKFxuICBoOiBudW1iZXIsXG4gIHM6IG51bWJlcixcbiAgdjogbnVtYmVyLFxuICBhOiBudW1iZXJcbik6IG51bWJlciB8IHN0cmluZyA9PiB7XG4gICd3b3JrbGV0JztcbiAgY29uc3QgeyByLCBnLCBiIH0gPSBIU1Z0b1JHQihoLCBzLCB2KTtcbiAgcmV0dXJuIHJnYmFDb2xvcihyLCBnLCBiLCBhKTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm9jZXNzQ29sb3JJbml0aWFsbHkoXG4gIGNvbG9yOiB1bmtub3duXG4pOiBudW1iZXIgfCBudWxsIHwgdW5kZWZpbmVkIHtcbiAgJ3dvcmtsZXQnO1xuICBpZiAoY29sb3IgPT09IG51bGwgfHwgY29sb3IgPT09IHVuZGVmaW5lZCB8fCB0eXBlb2YgY29sb3IgPT09ICdudW1iZXInKSB7XG4gICAgcmV0dXJuIGNvbG9yO1xuICB9XG5cbiAgbGV0IG5vcm1hbGl6ZWRDb2xvciA9IG5vcm1hbGl6ZUNvbG9yKGNvbG9yKTtcblxuICBpZiAobm9ybWFsaXplZENvbG9yID09PSBudWxsIHx8IG5vcm1hbGl6ZWRDb2xvciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygbm9ybWFsaXplZENvbG9yICE9PSAnbnVtYmVyJykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgbm9ybWFsaXplZENvbG9yID0gKChub3JtYWxpemVkQ29sb3IgPDwgMjQpIHwgKG5vcm1hbGl6ZWRDb2xvciA+Pj4gOCkpID4+PiAwOyAvLyBhcmdiXG4gIHJldHVybiBub3JtYWxpemVkQ29sb3I7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0NvbG9yKHZhbHVlOiB1bmtub3duKTogYm9vbGVhbiB7XG4gICd3b3JrbGV0JztcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHByb2Nlc3NDb2xvckluaXRpYWxseSh2YWx1ZSkgIT0gbnVsbDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHByb2Nlc3NDb2xvcihjb2xvcjogdW5rbm93bik6IG51bWJlciB8IG51bGwgfCB1bmRlZmluZWQge1xuICAnd29ya2xldCc7XG4gIGxldCBub3JtYWxpemVkQ29sb3IgPSBwcm9jZXNzQ29sb3JJbml0aWFsbHkoY29sb3IpO1xuICBpZiAobm9ybWFsaXplZENvbG9yID09PSBudWxsIHx8IG5vcm1hbGl6ZWRDb2xvciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygbm9ybWFsaXplZENvbG9yICE9PSAnbnVtYmVyJykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgaWYgKElTX0FORFJPSUQpIHtcbiAgICAvLyBBbmRyb2lkIHVzZSAzMiBiaXQgKnNpZ25lZCogaW50ZWdlciB0byByZXByZXNlbnQgdGhlIGNvbG9yXG4gICAgLy8gV2UgdXRpbGl6ZSB0aGUgZmFjdCB0aGF0IGJpdHdpc2Ugb3BlcmF0aW9ucyBpbiBKUyBhbHNvIG9wZXJhdGVzIG9uXG4gICAgLy8gc2lnbmVkIDMyIGJpdCBpbnRlZ2Vycywgc28gdGhhdCB3ZSBjYW4gdXNlIHRob3NlIHRvIGNvbnZlcnQgZnJvbVxuICAgIC8vICp1bnNpZ25lZCogdG8gKnNpZ25lZCogMzJiaXQgaW50IHRoYXQgd2F5LlxuICAgIG5vcm1hbGl6ZWRDb2xvciA9IG5vcm1hbGl6ZWRDb2xvciB8IDB4MDtcbiAgfVxuXG4gIHJldHVybiBub3JtYWxpemVkQ29sb3I7XG59XG5cbmV4cG9ydCB0eXBlIFBhcnNlZENvbG9yQXJyYXkgPSBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcblxuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRUb1JHQkEoY29sb3I6IHVua25vd24pOiBQYXJzZWRDb2xvckFycmF5IHtcbiAgJ3dvcmtsZXQnO1xuICBjb25zdCBwcm9jZXNzZWRDb2xvciA9IHByb2Nlc3NDb2xvckluaXRpYWxseShjb2xvcikhOyAvLyBhcmdiO1xuICBjb25zdCBhID0gKHByb2Nlc3NlZENvbG9yID4+PiAyNCkgLyAyNTU7XG4gIGNvbnN0IHIgPSAoKHByb2Nlc3NlZENvbG9yIDw8IDgpID4+PiAyNCkgLyAyNTU7XG4gIGNvbnN0IGcgPSAoKHByb2Nlc3NlZENvbG9yIDw8IDE2KSA+Pj4gMjQpIC8gMjU1O1xuICBjb25zdCBiID0gKChwcm9jZXNzZWRDb2xvciA8PCAyNCkgPj4+IDI0KSAvIDI1NTtcbiAgcmV0dXJuIFtyLCBnLCBiLCBhXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJnYmFBcnJheVRvUkdCQUNvbG9yKFJHQkE6IFBhcnNlZENvbG9yQXJyYXkpOiBzdHJpbmcge1xuICAnd29ya2xldCc7XG4gIHJldHVybiBgcmdiYSgke01hdGgucm91bmQoUkdCQVswXSAqIDI1NSl9LCAke01hdGgucm91bmQoXG4gICAgUkdCQVsxXSAqIDI1NVxuICApfSwgJHtNYXRoLnJvdW5kKFJHQkFbMl0gKiAyNTUpfSwgJHtSR0JBWzNdfSlgO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdG9MaW5lYXJTcGFjZShcbiAgUkdCQTogUGFyc2VkQ29sb3JBcnJheSxcbiAgZ2FtbWEgPSAyLjJcbik6IFBhcnNlZENvbG9yQXJyYXkge1xuICAnd29ya2xldCc7XG4gIGNvbnN0IHJlcyA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IDM7ICsraSkge1xuICAgIHJlcy5wdXNoKE1hdGgucG93KFJHQkFbaV0sIGdhbW1hKSk7XG4gIH1cbiAgcmVzLnB1c2goUkdCQVszXSk7XG4gIHJldHVybiByZXMgYXMgUGFyc2VkQ29sb3JBcnJheTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRvR2FtbWFTcGFjZShcbiAgUkdCQTogUGFyc2VkQ29sb3JBcnJheSxcbiAgZ2FtbWEgPSAyLjJcbik6IFBhcnNlZENvbG9yQXJyYXkge1xuICAnd29ya2xldCc7XG4gIGNvbnN0IHJlcyA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IDM7ICsraSkge1xuICAgIHJlcy5wdXNoKE1hdGgucG93KFJHQkFbaV0sIDEgLyBnYW1tYSkpO1xuICB9XG4gIHJlcy5wdXNoKFJHQkFbM10pO1xuICByZXR1cm4gcmVzIGFzIFBhcnNlZENvbG9yQXJyYXk7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFRQSxJQUFBQSxLQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxnQkFBQSxHQUFBRCxPQUFBO0FBZUEsSUFBTUUsTUFBTSxHQUFHLG1DQUFtQztBQUNsRCxJQUFNQyxVQUFVLEdBQUdELE1BQU0sR0FBRyxHQUFHO0FBRS9CLFNBQVNFLElBQUlBLENBQUEsRUFBNkI7RUFDeEMsU0FBUzs7RUFBQyxTQUFBQyxJQUFBLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxFQURLQyxJQUFJLE9BQUFDLEtBQUEsQ0FBQUosSUFBQSxHQUFBSyxJQUFBLE1BQUFBLElBQUEsR0FBQUwsSUFBQSxFQUFBSyxJ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