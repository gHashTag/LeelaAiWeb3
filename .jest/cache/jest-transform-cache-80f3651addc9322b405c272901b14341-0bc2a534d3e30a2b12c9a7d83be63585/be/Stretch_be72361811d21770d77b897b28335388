35111df09af496ff7291c2265f406c40
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StretchOutY = exports.StretchOutX = exports.StretchInY = exports.StretchInX = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _animationBuilder = require("../animationBuilder");
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
  if (typeof input !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var StretchInX = function (_ComplexAnimationBuil) {
  (0, _inherits2.default)(StretchInX, _ComplexAnimationBuil);
  var _super = _createSuper(StretchInX);
  function StretchInX() {
    var _this;
    (0, _classCallCheck2.default)(this, StretchInX);
    _this = _super.apply(this, arguments);
    _defineProperty((0, _assertThisInitialized2.default)(_this), "build", function () {
      var delayFunction = _this.getDelayFunction();
      var _this$getAnimationAnd = _this.getAnimationAndConfig(),
        _this$getAnimationAnd2 = (0, _slicedToArray2.default)(_this$getAnimationAnd, 2),
        animation = _this$getAnimationAnd2[0],
        config = _this$getAnimationAnd2[1];
      var delay = _this.getDelay();
      var callback = _this.callbackV;
      var initialValues = _this.initialValues;
      return function () {
        'worklet';

        return {
          animations: {
            transform: [{
              scaleX: delayFunction(delay, animation(1, config))
            }]
          },
          initialValues: Object.assign({
            transform: [{
              scaleX: 0
            }]
          }, initialValues),
          callback: callback
        };
      };
    });
    return _this;
  }
  (0, _createClass2.default)(StretchInX, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new StretchInX();
    }
  }]);
  return StretchInX;
}(_animationBuilder.ComplexAnimationBuilder);
exports.StretchInX = StretchInX;
var StretchInY = function (_ComplexAnimationBuil2) {
  (0, _inherits2.default)(StretchInY, _ComplexAnimationBuil2);
  var _super2 = _createSuper(StretchInY);
  function StretchInY() {
    var _this2;
    (0, _classCallCheck2.default)(this, StretchInY);
    _this2 = _super2.apply(this, arguments);
    _defineProperty((0, _assertThisInitialized2.default)(_this2), "build", function () {
      var delayFunction = _this2.getDelayFunction();
      var _this2$getAnimationAn = _this2.getAnimationAndConfig(),
        _this2$getAnimationAn2 = (0, _slicedToArray2.default)(_this2$getAnimationAn, 2),
        animation = _this2$getAnimationAn2[0],
        config = _this2$getAnimationAn2[1];
      var delay = _this2.getDelay();
      var callback = _this2.callbackV;
      var initialValues = _this2.initialValues;
      return function () {
        'worklet';

        return {
          animations: {
            transform: [{
              scaleY: delayFunction(delay, animation(1, config))
            }]
          },
          initialValues: Object.assign({
            transform: [{
              scaleY: 0
            }]
          }, initialValues),
          callback: callback
        };
      };
    });
    return _this2;
  }
  (0, _createClass2.default)(StretchInY, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new StretchInY();
    }
  }]);
  return StretchInY;
}(_animationBuilder.ComplexAnimationBuilder);
exports.StretchInY = StretchInY;
var StretchOutX = function (_ComplexAnimationBuil3) {
  (0, _inherits2.default)(StretchOutX, _ComplexAnimationBuil3);
  var _super3 = _createSuper(StretchOutX);
  function StretchOutX() {
    var _this3;
    (0, _classCallCheck2.default)(this, StretchOutX);
    _this3 = _super3.apply(this, arguments);
    _defineProperty((0, _assertThisInitialized2.default)(_this3), "build", function () {
      var delayFunction = _this3.getDelayFunction();
      var _this3$getAnimationAn = _this3.getAnimationAndConfig(),
        _this3$getAnimationAn2 = (0, _slicedToArray2.default)(_this3$getAnimationAn, 2),
        animation = _this3$getAnimationAn2[0],
        config = _this3$getAnimationAn2[1];
      var delay = _this3.getDelay();
      var callback = _this3.callbackV;
      var initialValues = _this3.initialValues;
      return function () {
        'worklet';

        return {
          animations: {
            transform: [{
              scaleX: delayFunction(delay, animation(0, config))
            }]
          },
          initialValues: Object.assign({
            transform: [{
              scaleX: 1
            }]
          }, initialValues),
          callback: callback
        };
      };
    });
    return _this3;
  }
  (0, _createClass2.default)(StretchOutX, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new StretchOutX();
    }
  }]);
  return StretchOutX;
}(_animationBuilder.ComplexAnimationBuilder);
exports.StretchOutX = StretchOutX;
var StretchOutY = function (_ComplexAnimationBuil4) {
  (0, _inherits2.default)(StretchOutY, _ComplexAnimationBuil4);
  var _super4 = _createSuper(StretchOutY);
  function StretchOutY() {
    var _this4;
    (0, _classCallCheck2.default)(this, StretchOutY);
    _this4 = _super4.apply(this, arguments);
    _defineProperty((0, _assertThisInitialized2.default)(_this4), "build", function () {
      var delayFunction = _this4.getDelayFunction();
      var _this4$getAnimationAn = _this4.getAnimationAndConfig(),
        _this4$getAnimationAn2 = (0, _slicedToArray2.default)(_this4$getAnimationAn, 2),
        animation = _this4$getAnimationAn2[0],
        config = _this4$getAnimationAn2[1];
      var delay = _this4.getDelay();
      var callback = _this4.callbackV;
      var initialValues = _this4.initialValues;
      return function () {
        'worklet';

        return {
          animations: {
            transform: [{
              scaleY: delayFunction(delay, animation(0, config))
            }]
          },
          initialValues: Object.assign({
            transform: [{
              scaleY: 1
            }]
          }, initialValues),
          callback: callback
        };
      };
    });
    return _this4;
  }
  (0, _createClass2.default)(StretchOutY, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new StretchOutY();
    }
  }]);
  return StretchOutY;
}(_animationBuilder.ComplexAnimationBuilder);
exports.StretchOutY = StretchOutY;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,