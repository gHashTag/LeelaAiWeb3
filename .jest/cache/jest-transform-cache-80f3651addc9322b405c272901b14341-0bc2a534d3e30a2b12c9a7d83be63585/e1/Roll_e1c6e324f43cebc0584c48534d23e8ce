5cb57b894c468eac9f3f3266e65a6523
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RollOutRight = exports.RollOutLeft = exports.RollInRight = exports.RollInLeft = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _animationBuilder = require("../animationBuilder");
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
  if (typeof input !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var RollInLeft = function (_ComplexAnimationBuil) {
  (0, _inherits2.default)(RollInLeft, _ComplexAnimationBuil);
  var _super = _createSuper(RollInLeft);
  function RollInLeft() {
    var _this;
    (0, _classCallCheck2.default)(this, RollInLeft);
    _this = _super.apply(this, arguments);
    _defineProperty((0, _assertThisInitialized2.default)(_this), "build", function () {
      var delayFunction = _this.getDelayFunction();
      var _this$getAnimationAnd = _this.getAnimationAndConfig(),
        _this$getAnimationAnd2 = (0, _slicedToArray2.default)(_this$getAnimationAnd, 2),
        animation = _this$getAnimationAnd2[0],
        config = _this$getAnimationAnd2[1];
      var delay = _this.getDelay();
      var callback = _this.callbackV;
      var initialValues = _this.initialValues;
      return function (values) {
        'worklet';

        return {
          animations: {
            transform: [{
              translateX: delayFunction(delay, animation(0), config)
            }, {
              rotate: delayFunction(delay, animation('0deg', config))
            }]
          },
          initialValues: Object.assign({
            transform: [{
              translateX: -values.windowWidth
            }, {
              rotate: '-180deg'
            }]
          }, initialValues),
          callback: callback
        };
      };
    });
    return _this;
  }
  (0, _createClass2.default)(RollInLeft, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new RollInLeft();
    }
  }]);
  return RollInLeft;
}(_animationBuilder.ComplexAnimationBuilder);
exports.RollInLeft = RollInLeft;
var RollInRight = function (_ComplexAnimationBuil2) {
  (0, _inherits2.default)(RollInRight, _ComplexAnimationBuil2);
  var _super2 = _createSuper(RollInRight);
  function RollInRight() {
    var _this2;
    (0, _classCallCheck2.default)(this, RollInRight);
    _this2 = _super2.apply(this, arguments);
    _defineProperty((0, _assertThisInitialized2.default)(_this2), "build", function () {
      var delayFunction = _this2.getDelayFunction();
      var _this2$getAnimationAn = _this2.getAnimationAndConfig(),
        _this2$getAnimationAn2 = (0, _slicedToArray2.default)(_this2$getAnimationAn, 2),
        animation = _this2$getAnimationAn2[0],
        config = _this2$getAnimationAn2[1];
      var delay = _this2.getDelay();
      var callback = _this2.callbackV;
      var initialValues = _this2.initialValues;
      return function (values) {
        'worklet';

        return {
          animations: {
            transform: [{
              translateX: delayFunction(delay, animation(0, config))
            }, {
              rotate: delayFunction(delay, animation('0deg', config))
            }]
          },
          initialValues: Object.assign({
            transform: [{
              translateX: values.windowWidth
            }, {
              rotate: '180deg'
            }]
          }, initialValues),
          callback: callback
        };
      };
    });
    return _this2;
  }
  (0, _createClass2.default)(RollInRight, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new RollInRight();
    }
  }]);
  return RollInRight;
}(_animationBuilder.ComplexAnimationBuilder);
exports.RollInRight = RollInRight;
var RollOutLeft = function (_ComplexAnimationBuil3) {
  (0, _inherits2.default)(RollOutLeft, _ComplexAnimationBuil3);
  var _super3 = _createSuper(RollOutLeft);
  function RollOutLeft() {
    var _this3;
    (0, _classCallCheck2.default)(this, RollOutLeft);
    _this3 = _super3.apply(this, arguments);
    _defineProperty((0, _assertThisInitialized2.default)(_this3), "build", function () {
      var delayFunction = _this3.getDelayFunction();
      var _this3$getAnimationAn = _this3.getAnimationAndConfig(),
        _this3$getAnimationAn2 = (0, _slicedToArray2.default)(_this3$getAnimationAn, 2),
        animation = _this3$getAnimationAn2[0],
        config = _this3$getAnimationAn2[1];
      var delay = _this3.getDelay();
      var callback = _this3.callbackV;
      var initialValues = _this3.initialValues;
      return function (values) {
        'worklet';

        return {
          animations: {
            transform: [{
              translateX: delayFunction(delay, animation(-values.windowWidth, config))
            }, {
              rotate: delayFunction(delay, animation('-180deg', config))
            }]
          },
          initialValues: Object.assign({
            transform: [{
              translateX: 0
            }, {
              rotate: '0deg'
            }]
          }, initialValues),
          callback: callback
        };
      };
    });
    return _this3;
  }
  (0, _createClass2.default)(RollOutLeft, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new RollOutLeft();
    }
  }]);
  return RollOutLeft;
}(_animationBuilder.ComplexAnimationBuilder);
exports.RollOutLeft = RollOutLeft;
var RollOutRight = function (_ComplexAnimationBuil4) {
  (0, _inherits2.default)(RollOutRight, _ComplexAnimationBuil4);
  var _super4 = _createSuper(RollOutRight);
  function RollOutRight() {
    var _this4;
    (0, _classCallCheck2.default)(this, RollOutRight);
    _this4 = _super4.apply(this, arguments);
    _defineProperty((0, _assertThisInitialized2.default)(_this4), "build", function () {
      var delayFunction = _this4.getDelayFunction();
      var _this4$getAnimationAn = _this4.getAnimationAndConfig(),
        _this4$getAnimationAn2 = (0, _slicedToArray2.default)(_this4$getAnimationAn, 2),
        animation = _this4$getAnimationAn2[0],
        config = _this4$getAnimationAn2[1];
      var delay = _this4.getDelay();
      var callback = _this4.callbackV;
      var initialValues = _this4.initialValues;
      return function (values) {
        'worklet';

        return {
          animations: {
            transform: [{
              translateX: delayFunction(delay, animation(values.windowWidth, config))
            }, {
              rotate: delayFunction(delay, animation('180deg', config))
            }]
          },
          initialValues: Object.assign({
            transform: [{
              translateX: 0
            }, {
              rotate: '0deg'
            }]
          }, initialValues),
          callback: callback
        };
      };
    });
    return _this4;
  }
  (0, _createClass2.default)(RollOutRight, null, [{
    key: "createInstance",
    value: function createInstance() {
      return new RollOutRight();
    }
  }]);
  return RollOutRight;
}(_animationBuilder.ComplexAnimationBuilder);
exports.RollOutRight = RollOutRight;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,