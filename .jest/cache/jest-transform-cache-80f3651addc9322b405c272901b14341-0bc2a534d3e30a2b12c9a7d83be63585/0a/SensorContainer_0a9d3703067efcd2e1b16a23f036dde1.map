{"version":3,"names":["_Sensor","_interopRequireDefault","require","SensorContainer","_classCallCheck2","default","_defineProperty","Map","_createClass2","key","value","getSensorId","sensorType","config","iosReferenceFrame","Number","adjustToInterfaceOrientation","initializeSensor","sensorId","nativeSensors","has","newSensor","Sensor","set","sensor","get","getSharedValue","registerSensor","handler","isAvailable","isRunning","register","listenersNumber","unregisterSensor","unregister","exports"],"sources":["SensorContainer.ts"],"sourcesContent":["import type {\n  SensorType,\n  SensorConfig,\n  Value3D,\n  ValueRotation,\n  ShareableRef,\n  SharedValue,\n} from './commonTypes';\nimport Sensor from './Sensor';\n\nexport class SensorContainer {\n  private nativeSensors: Map<number, Sensor> = new Map();\n\n  getSensorId(sensorType: SensorType, config: SensorConfig) {\n    return (\n      sensorType * 100 +\n      config.iosReferenceFrame * 10 +\n      Number(config.adjustToInterfaceOrientation)\n    );\n  }\n\n  initializeSensor(\n    sensorType: SensorType,\n    config: SensorConfig\n  ): SharedValue<Value3D | ValueRotation> {\n    const sensorId = this.getSensorId(sensorType, config);\n\n    if (!this.nativeSensors.has(sensorId)) {\n      const newSensor = new Sensor(sensorType, config);\n      this.nativeSensors.set(sensorId, newSensor);\n    }\n\n    const sensor = this.nativeSensors.get(sensorId);\n    return sensor!.getSharedValue();\n  }\n\n  registerSensor(\n    sensorType: SensorType,\n    config: SensorConfig,\n    handler: ShareableRef<(data: Value3D | ValueRotation) => void>\n  ): number {\n    const sensorId = this.getSensorId(sensorType, config);\n\n    if (!this.nativeSensors.has(sensorId)) {\n      return -1;\n    }\n\n    const sensor = this.nativeSensors.get(sensorId);\n    if (\n      sensor &&\n      sensor.isAvailable() &&\n      (sensor.isRunning() || sensor.register(handler))\n    ) {\n      sensor.listenersNumber++;\n      return sensorId;\n    }\n    return -1;\n  }\n\n  unregisterSensor(sensorId: number) {\n    if (this.nativeSensors.has(sensorId)) {\n      const sensor = this.nativeSensors.get(sensorId);\n      if (sensor && sensor.isRunning()) {\n        sensor.listenersNumber--;\n        if (sensor.listenersNumber === 0) {\n          sensor.unregister();\n        }\n      }\n    }\n  }\n}\n"],"mappings":";;;;;;;AAQA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEaC,eAAe;EAAC,SAAAA,gBAAA;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAF,eAAA;IAAAG,eAAA,wBACkB,IAAIC,GAAG,EAAE;EAAA;EAAA,IAAAC,aAAA,CAAAH,OAAA,EAAAF,eAAA;IAAAM,GAAA;IAAAC,KAAA,EAEtD,SAAAC,YAAYC,UAAsB,EAAEC,MAAoB,EAAE;MACxD,OACED,UAAU,GAAG,GAAG,GAChBC,MAAM,CAACC,iBAAiB,GAAG,EAAE,GAC7BC,MAAM,CAACF,MAAM,CAACG,4BAA4B,CAAC;IAE/C;EAAA;IAAAP,GAAA;IAAAC,KAAA,EAEA,SAAAO,iBACEL,UAAsB,EACtBC,MAAoB,EACkB;MACtC,IAAMK,QAAQ,GAAG,IAAI,CAACP,WAAW,CAACC,UAAU,EAAEC,MAAM,CAAC;MAErD,IAAI,CAAC,IAAI,CAACM,aAAa,CAACC,GAAG,CAACF,QAAQ,CAAC,EAAE;QACrC,IAAMG,SAAS,GAAG,IAAIC,eAAM,CAACV,UAAU,EAAEC,MAAM,CAAC;QAChD,IAAI,CAACM,aAAa,CAACI,GAAG,CAACL,QAAQ,EAAEG,SAAS,CAAC;MAC7C;MAEA,IAAMG,MAAM,GAAG,IAAI,CAACL,aAAa,CAACM,GAAG,CAACP,QAAQ,CAAC;MAC/C,OAAOM,MAAM,CAAEE,cAAc,EAAE;IACjC;EAAA;IAAAjB,GAAA;IAAAC,KAAA,EAEA,SAAAiB,eACEf,UAAsB,EACtBC,MAAoB,EACpBe,OAA8D,EACtD;MACR,IAAMV,QAAQ,GAAG,IAAI,CAACP,WAAW,CAACC,UAAU,EAAEC,MAAM,CAAC;MAErD,IAAI,CAAC,IAAI,CAACM,aAAa,CAACC,GAAG,CAACF,QAAQ,CAAC,EAAE;QACrC,OAAO,CAAC,CAAC;MACX;MAEA,IAAMM,MAAM,GAAG,IAAI,CAACL,aAAa,CAACM,GAAG,CAACP,QAAQ,CAAC;MAC/C,IACEM,MAAM,IACNA,MAAM,CAACK,WAAW,EAAE,KACnBL,MAAM,CAACM,SAAS,EAAE,IAAIN,MAAM,CAACO,QAAQ,CAACH,OAAO,CAAC,CAAC,EAChD;QACAJ,MAAM,CAACQ,eAAe,EAAE;QACxB,OAAOd,QAAQ;MACjB;MACA,OAAO,CAAC,CAAC;IACX;EAAA;IAAAT,GAAA;IAAAC,KAAA,EAEA,SAAAuB,iBAAiBf,QAAgB,EAAE;MACjC,IAAI,IAAI,CAACC,aAAa,CAACC,GAAG,CAACF,QAAQ,CAAC,EAAE;QACpC,IAAMM,MAAM,GAAG,IAAI,CAACL,aAAa,CAACM,GAAG,CAACP,QAAQ,CAAC;QAC/C,IAAIM,MAAM,IAAIA,MAAM,CAACM,SAAS,EAAE,EAAE;UAChCN,MAAM,CAACQ,eAAe,EAAE;UACxB,IAAIR,MAAM,CAACQ,eAAe,KAAK,CAAC,EAAE;YAChCR,MAAM,CAACU,UAAU,EAAE;UACrB;QACF;MACF;IACF;EAAA;EAAA,OAAA/B,eAAA;AAAA;AAAAgC,OAAA,CAAAhC,eAAA,GAAAA,eAAA"}