{"version":3,"names":["react_native_1","require","_1","react_1","__importDefault","describe","it","_ref","render","_jsxRuntime","jsx","Text","title","getByText","expect","toBeTruthy","styles","forEach","style","_ref2","h","getByTestId","receivedStyle","props","toEqual","objectContaining","textStyles","customTextStyle","fontWeight","fontStyle","oneColor","_ref3","textStyle","textComponent","toMatchObject","color","_ref4"],"sources":["/Users/playra/LeelaAiWeb3/src/components/Text/Text.test.tsx"],"sourcesContent":["import {render} from '@testing-library/react-native'\nimport {Text, hT, textStyles} from './' // Replace with your actual file path\nimport React from 'react'\nimport {TextStyle} from 'react-native'\n\ndescribe('Text Component', () => {\n  it('renders correctly with default props', () => {\n    const {getByText} = render(<Text title=\"Test Title\" />)\n    expect(getByText('Test Title')).toBeTruthy()\n  })\n\n  it('applies the correct style based on the \"h\" prop', () => {\n    const styles: hT[] = [\n      'h0',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'h7',\n      'h8',\n      'h9',\n      'h10',\n      'h11',\n      'h12',\n    ]\n    styles.forEach(style => {\n      const {getByTestId} = render(<Text title=\"Test Title\" h={style} />)\n      const receivedStyle = getByTestId('text-component').props.style\n      expect(receivedStyle).toEqual(expect.objectContaining(textStyles[style]))\n    })\n  })\n\n  it('applies the oneColor prop correctly', () => {\n    const customTextStyle: TextStyle = {fontWeight: 'bold', fontStyle: 'italic'}\n    const oneColor = 'blue'\n    const {getByTestId} = render(\n      <Text\n        title=\"Test Title\"\n        oneColor={oneColor}\n        textStyle={customTextStyle}\n      />,\n    )\n    const textComponent = getByTestId('text-component')\n    expect(textComponent.props.style[0]).toMatchObject({\n      color: 'blue',\n    })\n  })\n\n  it('applies the textStyle prop correctly', () => {\n    const customTextStyle: TextStyle = {fontWeight: 'bold', fontStyle: 'italic'}\n    const {getByTestId} = render(\n      <Text title=\"Test Title\" textStyle={customTextStyle} />,\n    )\n    const textComponent = getByTestId('text-component')\n    expect(textComponent.props.style[1]).toMatchObject(customTextStyle)\n  })\n})\n"],"mappings":";;;;;;;;;;;;;AAAA,IAAAA,cAAA,GAAAC,OAAA;AACA,IAAAC,EAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAC,eAAA,CAAAH,OAAA;AAGAI,QAAQ,CAAC,gBAAgB,EAAE,YAAK;EAC9BC,EAAE,CAAC,sCAAsC,EAAE,YAAK;IAC9C,IAAAC,IAAA,GAAoB,IAAAP,cAAA,CAAAQ,MAAM,EAAC,IAAAC,WAAA,CAAAC,GAAA,EAACR,EAAA,CAAAS,IAAI;QAACC,KAAK,EAAC;MAAY,EAAG,CAAC;MAAhDC,SAAS,GAAAN,IAAA,CAATM,SAAS;IAChBC,MAAM,CAACD,SAAS,CAAC,YAAY,CAAC,CAAC,CAACE,UAAU,EAAE;EAC9C,CAAC,CAAC;EAEFT,EAAE,CAAC,iDAAiD,EAAE,YAAK;IACzD,IAAMU,MAAM,GAAS,CACnB,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,KAAK,EACL,KAAK,CACN;IACDA,MAAM,CAACC,OAAO,CAAC,UAAAC,KAAK,EAAG;MACrB,IAAAC,KAAA,GAAsB,IAAAnB,cAAA,CAAAQ,MAAM,EAAC,IAAAC,WAAA,CAAAC,GAAA,EAACR,EAAA,CAAAS,IAAI;UAACC,KAAK,EAAC,YAAY;UAACQ,CAAC,EAAEF;QAAM,EAAG,CAAC;QAA5DG,WAAW,GAAAF,KAAA,CAAXE,WAAW;MAClB,IAAMC,aAAa,GAAGD,WAAW,CAAC,gBAAgB,CAAC,CAACE,KAAK,CAACL,KAAK;MAC/DJ,MAAM,CAACQ,aAAa,CAAC,CAACE,OAAO,CAACV,MAAM,CAACW,gBAAgB,CAACvB,EAAA,CAAAwB,UAAU,CAACR,KAAK,CAAC,CAAC,CAAC;IAC3E,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFZ,EAAE,CAAC,qCAAqC,EAAE,YAAK;IAC7C,IAAMqB,eAAe,GAAc;MAACC,UAAU,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAQ,CAAC;IAC5E,IAAMC,QAAQ,GAAG,MAAM;IACvB,IAAAC,KAAA,GAAsB,IAAA/B,cAAA,CAAAQ,MAAM,EAC1B,IAAAC,WAAA,CAAAC,GAAA,EAACR,EAAA,CAAAS,IAAI;QACHC,KAAK,EAAC,YAAY;QAClBkB,QAAQ,EAAEA,QAAS;QACnBE,SAAS,EAAEL;MAAgB,EAC3B,CACH;MANMN,WAAW,GAAAU,KAAA,CAAXV,WAAW;IAOlB,IAAMY,aAAa,GAAGZ,WAAW,CAAC,gBAAgB,CAAC;IACnDP,MAAM,CAACmB,aAAa,CAACV,KAAK,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC,CAACgB,aAAa,CAAC;MACjDC,KAAK,EAAE;KACR,CAAC;EACJ,CAAC,CAAC;EAEF7B,EAAE,CAAC,sCAAsC,EAAE,YAAK;IAC9C,IAAMqB,eAAe,GAAc;MAACC,UAAU,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAQ,CAAC;IAC5E,IAAAO,KAAA,GAAsB,IAAApC,cAAA,CAAAQ,MAAM,EAC1B,IAAAC,WAAA,CAAAC,GAAA,EAACR,EAAA,CAAAS,IAAI;QAACC,KAAK,EAAC,YAAY;QAACoB,SAAS,EAAEL;MAAgB,EAAG,CACxD;MAFMN,WAAW,GAAAe,KAAA,CAAXf,WAAW;IAGlB,IAAMY,aAAa,GAAGZ,WAAW,CAAC,gBAAgB,CAAC;IACnDP,MAAM,CAACmB,aAAa,CAACV,KAAK,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC,CAACgB,aAAa,CAACP,eAAe,CAAC;EACrE,CAAC,CAAC;AACJ,CAAC,CAAC"}