46193bfe707d7966b6c463113b541b37
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/Text/Text.test.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
var react_native_1 = require("@testing-library/react-native");
var _1 = require("./");
var react_1 = __importDefault(require("react"));
describe('Text Component', function () {
  it('renders correctly with default props', function () {
    var _ref = (0, react_native_1.render)((0, _jsxRuntime.jsx)(_1.Text, {
        title: "Test Title"
      })),
      getByText = _ref.getByText;
    expect(getByText('Test Title')).toBeTruthy();
  });
  it('applies the correct style based on the "h" prop', function () {
    var styles = ['h0', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'h7', 'h8', 'h9', 'h10', 'h11', 'h12'];
    styles.forEach(function (style) {
      var _ref2 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(_1.Text, {
          title: "Test Title",
          h: style
        })),
        getByTestId = _ref2.getByTestId;
      var receivedStyle = getByTestId('text-component').props.style;
      expect(receivedStyle).toEqual(expect.objectContaining(_1.textStyles[style]));
    });
  });
  it('applies the oneColor prop correctly', function () {
    var _ref3 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(_1.Text, {
        title: "Test Title",
        oneColor: "blue"
      })),
      getByTestId = _ref3.getByTestId;
    var textComponent = getByTestId('text-component');
    expect(textComponent.props.style[0]).toMatchObject({
      color: 'blue'
    });
  });
  it('applies the textStyle prop correctly', function () {
    var customTextStyle = {
      fontWeight: 'bold',
      fontStyle: 'italic'
    };
    var _ref4 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(_1.Text, {
        title: "Test Title",
        textStyle: customTextStyle
      })),
      getByTestId = _ref4.getByTestId;
    var textComponent = getByTestId('text-component');
    expect(textComponent.props.style[1]).toMatchObject(customTextStyle);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF9uYXRpdmVfMSIsInJlcXVpcmUiLCJfMSIsInJlYWN0XzEiLCJfX2ltcG9ydERlZmF1bHQiLCJkZXNjcmliZSIsIml0IiwiX3JlZiIsInJlbmRlciIsIl9qc3hSdW50aW1lIiwianN4IiwiVGV4dCIsInRpdGxlIiwiZ2V0QnlUZXh0IiwiZXhwZWN0IiwidG9CZVRydXRoeSIsInN0eWxlcyIsImZvckVhY2giLCJzdHlsZSIsIl9yZWYyIiwiaCIsImdldEJ5VGVzdElkIiwicmVjZWl2ZWRTdHlsZSIsInByb3BzIiwidG9FcXVhbCIsIm9iamVjdENvbnRhaW5pbmciLCJ0ZXh0U3R5bGVzIiwiX3JlZjMiLCJvbmVDb2xvciIsInRleHRDb21wb25lbnQiLCJ0b01hdGNoT2JqZWN0IiwiY29sb3IiLCJjdXN0b21UZXh0U3R5bGUiLCJmb250V2VpZ2h0IiwiZm9udFN0eWxlIiwiX3JlZjQiLCJ0ZXh0U3R5bGUiXSwic291cmNlcyI6WyIvVXNlcnMvcGxheXJhL0xlZWxhQWlXZWIzL3NyYy9jb21wb25lbnRzL1RleHQvVGV4dC50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3JlbmRlcn0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnXG5pbXBvcnQge1RleHQsIGhULCB0ZXh0U3R5bGVzfSBmcm9tICcuLycgLy8gUmVwbGFjZSB3aXRoIHlvdXIgYWN0dWFsIGZpbGUgcGF0aFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHtUZXh0U3R5bGV9IGZyb20gJ3JlYWN0LW5hdGl2ZSdcblxuZGVzY3JpYmUoJ1RleHQgQ29tcG9uZW50JywgKCkgPT4ge1xuICBpdCgncmVuZGVycyBjb3JyZWN0bHkgd2l0aCBkZWZhdWx0IHByb3BzJywgKCkgPT4ge1xuICAgIGNvbnN0IHtnZXRCeVRleHR9ID0gcmVuZGVyKDxUZXh0IHRpdGxlPVwiVGVzdCBUaXRsZVwiIC8+KVxuICAgIGV4cGVjdChnZXRCeVRleHQoJ1Rlc3QgVGl0bGUnKSkudG9CZVRydXRoeSgpXG4gIH0pXG5cbiAgaXQoJ2FwcGxpZXMgdGhlIGNvcnJlY3Qgc3R5bGUgYmFzZWQgb24gdGhlIFwiaFwiIHByb3AnLCAoKSA9PiB7XG4gICAgY29uc3Qgc3R5bGVzOiBoVFtdID0gW1xuICAgICAgJ2gwJyxcbiAgICAgICdoMScsXG4gICAgICAnaDInLFxuICAgICAgJ2gzJyxcbiAgICAgICdoNCcsXG4gICAgICAnaDUnLFxuICAgICAgJ2g2JyxcbiAgICAgICdoNycsXG4gICAgICAnaDgnLFxuICAgICAgJ2g5JyxcbiAgICAgICdoMTAnLFxuICAgICAgJ2gxMScsXG4gICAgICAnaDEyJyxcbiAgICBdXG4gICAgc3R5bGVzLmZvckVhY2goc3R5bGUgPT4ge1xuICAgICAgY29uc3Qge2dldEJ5VGVzdElkfSA9IHJlbmRlcig8VGV4dCB0aXRsZT1cIlRlc3QgVGl0bGVcIiBoPXtzdHlsZX0gLz4pXG4gICAgICBjb25zdCByZWNlaXZlZFN0eWxlID0gZ2V0QnlUZXN0SWQoJ3RleHQtY29tcG9uZW50JykucHJvcHMuc3R5bGVcbiAgICAgIGV4cGVjdChyZWNlaXZlZFN0eWxlKS50b0VxdWFsKGV4cGVjdC5vYmplY3RDb250YWluaW5nKHRleHRTdHlsZXNbc3R5bGVdKSlcbiAgICB9KVxuICB9KVxuXG4gIGl0KCdhcHBsaWVzIHRoZSBvbmVDb2xvciBwcm9wIGNvcnJlY3RseScsICgpID0+IHtcbiAgICBjb25zdCB7Z2V0QnlUZXN0SWR9ID0gcmVuZGVyKDxUZXh0IHRpdGxlPVwiVGVzdCBUaXRsZVwiIG9uZUNvbG9yPVwiYmx1ZVwiIC8+KVxuICAgIGNvbnN0IHRleHRDb21wb25lbnQgPSBnZXRCeVRlc3RJZCgndGV4dC1jb21wb25lbnQnKVxuICAgIGV4cGVjdCh0ZXh0Q29tcG9uZW50LnByb3BzLnN0eWxlWzBdKS50b01hdGNoT2JqZWN0KHtcbiAgICAgIGNvbG9yOiAnYmx1ZScsXG4gICAgfSlcbiAgfSlcblxuICBpdCgnYXBwbGllcyB0aGUgdGV4dFN0eWxlIHByb3AgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIGNvbnN0IGN1c3RvbVRleHRTdHlsZTogVGV4dFN0eWxlID0ge2ZvbnRXZWlnaHQ6ICdib2xkJywgZm9udFN0eWxlOiAnaXRhbGljJ31cbiAgICBjb25zdCB7Z2V0QnlUZXN0SWR9ID0gcmVuZGVyKFxuICAgICAgPFRleHQgdGl0bGU9XCJUZXN0IFRpdGxlXCIgdGV4dFN0eWxlPXtjdXN0b21UZXh0U3R5bGV9IC8+LFxuICAgIClcbiAgICBjb25zdCB0ZXh0Q29tcG9uZW50ID0gZ2V0QnlUZXN0SWQoJ3RleHQtY29tcG9uZW50JylcbiAgICBleHBlY3QodGV4dENvbXBvbmVudC5wcm9wcy5zdHlsZVsxXSkudG9NYXRjaE9iamVjdChjdXN0b21UZXh0U3R5bGUpXG4gIH0pXG59KVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsY0FBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsRUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsT0FBQSxHQUFBQyxlQUFBLENBQUFILE9BQUE7QUFHQUksUUFBUSxDQUFDLGdCQUFnQixFQUFFLFlBQUs7RUFDOUJDLEVBQUUsQ0FBQyxzQ0FBc0MsRUFBRSxZQUFLO0lBQzlDLElBQUFDLElBQUEsR0FBb0IsSUFBQVAsY0FBQSxDQUFBUSxNQUFNLEVBQUMsSUFBQUMsV0FBQSxDQUFBQyxHQUFBLEVBQUNSLEVBQUEsQ0FBQVMsSUFBSTtRQUFDQyxLQUFLLEVBQUM7TUFBWSxFQUFHLENBQUM7TUFBaERDLFNBQVMsR0FBQU4sSUFBQSxDQUFUTSxTQUFTO0lBQ2hCQyxNQUFNLENBQUNELFNBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDRSxVQUFVLEVBQUU7RUFDOUMsQ0FBQyxDQUFDO0VBRUZULEVBQUUsQ0FBQyxpREFBaUQsRUFBRSxZQUFLO0lBQ3pELElBQU1VLE1BQU0sR0FBUyxDQUNuQixJQUFJLEVBQ0osSUFBSSxFQUNKLElBQUksRUFDSixJQUFJLEVBQ0osSUFBSSxFQUNKLElBQUksRUFDSixJQUFJLEVBQ0osSUFBSSxFQUNKLElBQUksRUFDSixJQUFJLEVBQ0osS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLENBQ047SUFDREEsTUFBTSxDQUFDQyxPQUFPLENBQUMsVUFBQUMsS0FBSyxFQUFHO01BQ3JCLElBQUFDLEtBQUEsR0FBc0IsSUFBQW5CLGNBQUEsQ0FBQVEsTUFBTSxFQUFDLElBQUFDLFdBQUEsQ0FBQUMsR0FBQSxFQUFDUixFQUFBLENBQUFTLElBQUk7VUFBQ0MsS0FBSyxFQUFDLFlBQVk7VUFBQ1EsQ0FBQyxFQUFFRjtRQUFNLEVBQUcsQ0FBQztRQUE1REcsV0FBVyxHQUFBRixLQUFBLENBQVhFLFdBQVc7TUFDbEIsSUFBTUMsYUFBYSxHQUFHRCxXQUFXLENBQUMsZ0JBQWdCLENBQUMsQ0FBQ0UsS0FBSyxDQUFDTCxLQUFLO01BQy9ESixNQUFNLENBQUNRLGFBQWEsQ0FBQyxDQUFDRSxPQUFPLENBQUNWLE1BQU0sQ0FBQ1csZ0JBQWdCLENBQUN2QixFQUFBLENBQUF3QixVQUFVLENBQUNSLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDM0UsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxDQUFDO0VBRUZaLEVBQUUsQ0FBQyxxQ0FBcUMsRUFBRSxZQUFLO0lBQzdDLElBQUFxQixLQUFBLEdBQXNCLElBQUEzQixjQUFBLENBQUFRLE1BQU0sRUFBQyxJQUFBQyxXQUFBLENBQUFDLEdBQUEsRUFBQ1IsRUFBQSxDQUFBUyxJQUFJO1FBQUNDLEtBQUssRUFBQyxZQUFZO1FBQUNnQixRQUFRLEVBQUM7TUFBTSxFQUFHLENBQUM7TUFBbEVQLFdBQVcsR0FBQU0sS0FBQSxDQUFYTixXQUFXO0lBQ2xCLElBQU1RLGFBQWEsR0FBR1IsV0FBVyxDQUFDLGdCQUFnQixDQUFDO0lBQ25EUCxNQUFNLENBQUNlLGFBQWEsQ0FBQ04sS0FBSyxDQUFDTCxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQ1ksYUFBYSxDQUFDO01BQ2pEQyxLQUFLLEVBQUU7S0FDUixDQUFDO0VBQ0osQ0FBQyxDQUFDO0VBRUZ6QixFQUFFLENBQUMsc0NBQXNDLEVBQUUsWUFBSztJQUM5QyxJQUFNMEIsZUFBZSxHQUFjO01BQUNDLFVBQVUsRUFBRSxNQUFNO01BQUVDLFNBQVMsRUFBRTtJQUFRLENBQUM7SUFDNUUsSUFBQUMsS0FBQSxHQUFzQixJQUFBbkMsY0FBQSxDQUFBUSxNQUFNLEVBQzFCLElBQUFDLFdBQUEsQ0FBQUMsR0FBQSxFQUFDUixFQUFBLENBQUFTLElBQUk7UUFBQ0MsS0FBSyxFQUFDLFlBQVk7UUFBQ3dCLFNBQVMsRUFBRUo7TUFBZ0IsRUFBRyxDQUN4RDtNQUZNWCxXQUFXLEdBQUFjLEtBQUEsQ0FBWGQsV0FBVztJQUdsQixJQUFNUSxhQUFhLEdBQUdSLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQztJQUNuRFAsTUFBTSxDQUFDZSxhQUFhLENBQUNOLEtBQUssQ0FBQ0wsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUNZLGFBQWEsQ0FBQ0UsZUFBZSxDQUFDO0VBQ3JFLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyJ9