059524761fc3b8e4df67f4276cf919d3
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/Text/Text.test.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
var react_native_1 = require("@testing-library/react-native");
var _1 = require("./");
var react_1 = __importDefault(require("react"));
describe('Text Component', function () {
  it('renders correctly with default props', function () {
    var _ref = (0, react_native_1.render)((0, _jsxRuntime.jsx)(_1.Text, {
        title: "Test Title"
      })),
      getByText = _ref.getByText;
    expect(getByText('Test Title')).toBeTruthy();
  });
  it('applies the correct style based on the "h" prop', function () {
    var styles = ['h0', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'h7', 'h8', 'h9', 'h10', 'h11', 'h12'];
    styles.forEach(function (style) {
      var _ref2 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(_1.Text, {
          title: "Test Title",
          h: style
        })),
        getByTestId = _ref2.getByTestId;
      expect(getByTestId('text-component').props.style[0]).toEqual(expect.objectContaining(_1.textStyles[style]));
    });
  });
  it('applies the correct color based on the "oneColor" prop', function () {
    var _ref3 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(_1.Text, {
        title: "Test Title",
        oneColor: "red"
      })),
      getByTestId = _ref3.getByTestId;
    expect(getByTestId('text-component').props.style[0]).toEqual(expect.objectContaining({
      color: 'red'
    }));
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF9uYXRpdmVfMSIsInJlcXVpcmUiLCJfMSIsInJlYWN0XzEiLCJfX2ltcG9ydERlZmF1bHQiLCJkZXNjcmliZSIsIml0IiwiX3JlZiIsInJlbmRlciIsIl9qc3hSdW50aW1lIiwianN4IiwiVGV4dCIsInRpdGxlIiwiZ2V0QnlUZXh0IiwiZXhwZWN0IiwidG9CZVRydXRoeSIsInN0eWxlcyIsImZvckVhY2giLCJzdHlsZSIsIl9yZWYyIiwiaCIsImdldEJ5VGVzdElkIiwicHJvcHMiLCJ0b0VxdWFsIiwib2JqZWN0Q29udGFpbmluZyIsInRleHRTdHlsZXMiLCJfcmVmMyIsIm9uZUNvbG9yIiwiY29sb3IiXSwic291cmNlcyI6WyIvVXNlcnMvcGxheXJhL0xlZWxhQWlXZWIzL3NyYy9jb21wb25lbnRzL1RleHQvVGV4dC50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3JlbmRlcn0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnXG5pbXBvcnQge1RleHQsIGhULCBJY29sb3JzLCB0ZXh0U3R5bGVzfSBmcm9tICcuLycgLy8gUmVwbGFjZSB3aXRoIHlvdXIgYWN0dWFsIGZpbGUgcGF0aFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG5kZXNjcmliZSgnVGV4dCBDb21wb25lbnQnLCAoKSA9PiB7XG4gIGl0KCdyZW5kZXJzIGNvcnJlY3RseSB3aXRoIGRlZmF1bHQgcHJvcHMnLCAoKSA9PiB7XG4gICAgY29uc3Qge2dldEJ5VGV4dH0gPSByZW5kZXIoPFRleHQgdGl0bGU9XCJUZXN0IFRpdGxlXCIgLz4pXG4gICAgZXhwZWN0KGdldEJ5VGV4dCgnVGVzdCBUaXRsZScpKS50b0JlVHJ1dGh5KClcbiAgfSlcblxuICBpdCgnYXBwbGllcyB0aGUgY29ycmVjdCBzdHlsZSBiYXNlZCBvbiB0aGUgXCJoXCIgcHJvcCcsICgpID0+IHtcbiAgICBjb25zdCBzdHlsZXM6IGhUW10gPSBbXG4gICAgICAnaDAnLFxuICAgICAgJ2gxJyxcbiAgICAgICdoMicsXG4gICAgICAnaDMnLFxuICAgICAgJ2g0JyxcbiAgICAgICdoNScsXG4gICAgICAnaDYnLFxuICAgICAgJ2g3JyxcbiAgICAgICdoOCcsXG4gICAgICAnaDknLFxuICAgICAgJ2gxMCcsXG4gICAgICAnaDExJyxcbiAgICAgICdoMTInLFxuICAgIF1cbiAgICBzdHlsZXMuZm9yRWFjaChzdHlsZSA9PiB7XG4gICAgICBjb25zdCB7Z2V0QnlUZXN0SWR9ID0gcmVuZGVyKDxUZXh0IHRpdGxlPVwiVGVzdCBUaXRsZVwiIGg9e3N0eWxlfSAvPilcbiAgICAgIGV4cGVjdChnZXRCeVRlc3RJZCgndGV4dC1jb21wb25lbnQnKS5wcm9wcy5zdHlsZVswXSkudG9FcXVhbChcbiAgICAgICAgZXhwZWN0Lm9iamVjdENvbnRhaW5pbmcodGV4dFN0eWxlc1tzdHlsZV0pLFxuICAgICAgKVxuICAgIH0pXG4gIH0pXG5cbiAgaXQoJ2FwcGxpZXMgdGhlIGNvcnJlY3QgY29sb3IgYmFzZWQgb24gdGhlIFwib25lQ29sb3JcIiBwcm9wJywgKCkgPT4ge1xuICAgIGNvbnN0IHtnZXRCeVRlc3RJZH0gPSByZW5kZXIoPFRleHQgdGl0bGU9XCJUZXN0IFRpdGxlXCIgb25lQ29sb3I9XCJyZWRcIiAvPilcbiAgICBleHBlY3QoZ2V0QnlUZXN0SWQoJ3RleHQtY29tcG9uZW50JykucHJvcHMuc3R5bGVbMF0pLnRvRXF1YWwoXG4gICAgICBleHBlY3Qub2JqZWN0Q29udGFpbmluZyh7Y29sb3I6ICdyZWQnfSksXG4gICAgKVxuICB9KVxuXG4gIC8vICAgaXQoJ2FwcGxpZXMgdGhlIGNvcnJlY3QgY29sb3IgYmFzZWQgb24gdGhlIFwiY29sb3JzXCIgcHJvcCBhbmQgdGhlbWUnLCAoKSA9PiB7XG4gIC8vICAgICBjb25zdCBjb2xvcnM6IEljb2xvcnMgPSB7ZGFyazogJ2RhcmsnLCBsaWdodDogJ2xpZ2h0J31cbiAgLy8gICAgIC8vIFlvdSB3b3VsZCBuZWVkIHRvIG1vY2sgdXNlVGhlbWUgYW5kIHVzZUNvbG9yU2NoZW1lIGhlcmUgdG8gcmV0dXJuIHRoZSB2YWx1ZXMgeW91IHdhbnQgdG8gdGVzdFxuICAvLyAgICAgY29uc3Qge2dldEJ5VGVzdElkfSA9IHJlbmRlcig8VGV4dCB0aXRsZT1cIlRlc3QgVGl0bGVcIiBjb2xvcnM9e2NvbG9yc30gLz4pXG4gIC8vICAgICAvLyBFeHBlY3QgdGhlIGNvbG9yIHRvIGJlICdsaWdodCcgb3IgJ2RhcmsnIGRlcGVuZGluZyBvbiB3aGF0IHVzZUNvbG9yU2NoZW1lIHJldHVybnNcbiAgLy8gICB9KVxuXG4gIC8vIEFkZCBtb3JlIHRlc3RzIGFzIG5lZWRlZCBmb3Igb3RoZXIgcHJvcHNcbn0pXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBQSxjQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxFQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxPQUFBLEdBQUFDLGVBQUEsQ0FBQUgsT0FBQTtBQUVBSSxRQUFRLENBQUMsZ0JBQWdCLEVBQUUsWUFBSztFQUM5QkMsRUFBRSxDQUFDLHNDQUFzQyxFQUFFLFlBQUs7SUFDOUMsSUFBQUMsSUFBQSxHQUFvQixJQUFBUCxjQUFBLENBQUFRLE1BQU0sRUFBQyxJQUFBQyxXQUFBLENBQUFDLEdBQUEsRUFBQ1IsRUFBQSxDQUFBUyxJQUFJO1FBQUNDLEtBQUssRUFBQztNQUFZLEVBQUcsQ0FBQztNQUFoREMsU0FBUyxHQUFBTixJQUFBLENBQVRNLFNBQVM7SUFDaEJDLE1BQU0sQ0FBQ0QsU0FBUyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUNFLFVBQVUsRUFBRTtFQUM5QyxDQUFDLENBQUM7RUFFRlQsRUFBRSxDQUFDLGlEQUFpRCxFQUFFLFlBQUs7SUFDekQsSUFBTVUsTUFBTSxHQUFTLENBQ25CLElBQUksRUFDSixJQUFJLEVBQ0osSUFBSSxFQUNKLElBQUksRUFDSixJQUFJLEVBQ0osSUFBSSxFQUNKLElBQUksRUFDSixJQUFJLEVBQ0osSUFBSSxFQUNKLElBQUksRUFDSixLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssQ0FDTjtJQUNEQSxNQUFNLENBQUNDLE9BQU8sQ0FBQyxVQUFBQyxLQUFLLEVBQUc7TUFDckIsSUFBQUMsS0FBQSxHQUFzQixJQUFBbkIsY0FBQSxDQUFBUSxNQUFNLEVBQUMsSUFBQUMsV0FBQSxDQUFBQyxHQUFBLEVBQUNSLEVBQUEsQ0FBQVMsSUFBSTtVQUFDQyxLQUFLLEVBQUMsWUFBWTtVQUFDUSxDQUFDLEVBQUVGO1FBQU0sRUFBRyxDQUFDO1FBQTVERyxXQUFXLEdBQUFGLEtBQUEsQ0FBWEUsV0FBVztNQUNsQlAsTUFBTSxDQUFDTyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsQ0FBQ0MsS0FBSyxDQUFDSixLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQ0ssT0FBTyxDQUMxRFQsTUFBTSxDQUFDVSxnQkFBZ0IsQ0FBQ3RCLEVBQUEsQ0FBQXVCLFVBQVUsQ0FBQ1AsS0FBSyxDQUFDLENBQUMsQ0FDM0M7SUFDSCxDQUFDLENBQUM7RUFDSixDQUFDLENBQUM7RUFFRlosRUFBRSxDQUFDLHdEQUF3RCxFQUFFLFlBQUs7SUFDaEUsSUFBQW9CLEtBQUEsR0FBc0IsSUFBQTFCLGNBQUEsQ0FBQVEsTUFBTSxFQUFDLElBQUFDLFdBQUEsQ0FBQUMsR0FBQSxFQUFDUixFQUFBLENBQUFTLElBQUk7UUFBQ0MsS0FBSyxFQUFDLFlBQVk7UUFBQ2UsUUFBUSxFQUFDO01BQUssRUFBRyxDQUFDO01BQWpFTixXQUFXLEdBQUFLLEtBQUEsQ0FBWEwsV0FBVztJQUNsQlAsTUFBTSxDQUFDTyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsQ0FBQ0MsS0FBSyxDQUFDSixLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQ0ssT0FBTyxDQUMxRFQsTUFBTSxDQUFDVSxnQkFBZ0IsQ0FBQztNQUFDSSxLQUFLLEVBQUU7SUFBSyxDQUFDLENBQUMsQ0FDeEM7RUFDSCxDQUFDLENBQUM7QUFVSixDQUFDLENBQUMifQ==