{"version":3,"names":["react_native_1","require","_1","react_1","__importDefault","describe","it","_ref","render","_jsxRuntime","jsx","Text","title","getByText","expect","toBeTruthy","styles","forEach","style","_ref2","h","getByTestId","expectedStyle","textStyles","receivedStyle","props","filteredReceivedStyle","Object","keys","reduce","obj","key","toEqual"],"sources":["/Users/playra/LeelaAiWeb3/src/components/Text/Text.test.tsx"],"sourcesContent":["import {render} from '@testing-library/react-native'\nimport {Text, hT, textStyles} from './' // Replace with your actual file path\nimport React from 'react'\n\ndescribe('Text Component', () => {\n  it('renders correctly with default props', () => {\n    const {getByText} = render(<Text title=\"Test Title\" />)\n    expect(getByText('Test Title')).toBeTruthy()\n  })\n\n  it('applies the correct style based on the \"h\" prop', () => {\n    const styles: hT[] = [\n      'h0',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'h7',\n      'h8',\n      'h9',\n      'h10',\n      'h11',\n      'h12',\n    ]\n    styles.forEach(style => {\n      const {getByTestId} = render(<Text title=\"Test Title\" h={style} />)\n      const expectedStyle = textStyles[style]\n      const receivedStyle = getByTestId('text-component').props.style[0]\n\n      // Отбрасываем лишние свойства из полученного стиля\n      const filteredReceivedStyle = Object.keys(expectedStyle).reduce(\n        (obj: any, key) => {\n          obj[key] = receivedStyle[key]\n          return obj\n        },\n        {},\n      )\n\n      expect(filteredReceivedStyle).toEqual(expectedStyle)\n    })\n  })\n})\n"],"mappings":";;;;;;;;;;;;;AAAA,IAAAA,cAAA,GAAAC,OAAA;AACA,IAAAC,EAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAC,eAAA,CAAAH,OAAA;AAEAI,QAAQ,CAAC,gBAAgB,EAAE,YAAK;EAC9BC,EAAE,CAAC,sCAAsC,EAAE,YAAK;IAC9C,IAAAC,IAAA,GAAoB,IAAAP,cAAA,CAAAQ,MAAM,EAAC,IAAAC,WAAA,CAAAC,GAAA,EAACR,EAAA,CAAAS,IAAI;QAACC,KAAK,EAAC;MAAY,EAAG,CAAC;MAAhDC,SAAS,GAAAN,IAAA,CAATM,SAAS;IAChBC,MAAM,CAACD,SAAS,CAAC,YAAY,CAAC,CAAC,CAACE,UAAU,EAAE;EAC9C,CAAC,CAAC;EAEFT,EAAE,CAAC,iDAAiD,EAAE,YAAK;IACzD,IAAMU,MAAM,GAAS,CACnB,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,KAAK,EACL,KAAK,CACN;IACDA,MAAM,CAACC,OAAO,CAAC,UAAAC,KAAK,EAAG;MACrB,IAAAC,KAAA,GAAsB,IAAAnB,cAAA,CAAAQ,MAAM,EAAC,IAAAC,WAAA,CAAAC,GAAA,EAACR,EAAA,CAAAS,IAAI;UAACC,KAAK,EAAC,YAAY;UAACQ,CAAC,EAAEF;QAAM,EAAG,CAAC;QAA5DG,WAAW,GAAAF,KAAA,CAAXE,WAAW;MAClB,IAAMC,aAAa,GAAGpB,EAAA,CAAAqB,UAAU,CAACL,KAAK,CAAC;MACvC,IAAMM,aAAa,GAAGH,WAAW,CAAC,gBAAgB,CAAC,CAACI,KAAK,CAACP,KAAK,CAAC,CAAC,CAAC;MAGlE,IAAMQ,qBAAqB,GAAGC,MAAM,CAACC,IAAI,CAACN,aAAa,CAAC,CAACO,MAAM,CAC7D,UAACC,GAAQ,EAAEC,GAAG,EAAI;QAChBD,GAAG,CAACC,GAAG,CAAC,GAAGP,aAAa,CAACO,GAAG,CAAC;QAC7B,OAAOD,GAAG;MACZ,CAAC,EACD,EAAE,CACH;MAEDhB,MAAM,CAACY,qBAAqB,CAAC,CAACM,OAAO,CAACV,aAAa,CAAC;IACtD,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}