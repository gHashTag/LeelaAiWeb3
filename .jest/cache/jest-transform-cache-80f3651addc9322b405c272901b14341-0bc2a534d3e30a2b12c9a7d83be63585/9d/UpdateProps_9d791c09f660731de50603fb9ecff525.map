{"version":3,"names":["_Colors","require","_core","_jsReanimated","_PlatformChecker","_threads","colorProps","exports","ColorProperties","makeShareable","updateProps","shouldBeUseWeb","_","updates","maybeViewRef","items","forEach","item","_updatePropsJS","viewDescriptors","key","indexOf","processColor","global","UpdatePropsManager","update","updatePropsJestWrapper","animatedStyle","adapters","adapter","current","value","Object","assign","_default","default","createUpdatePropsManager","_IS_FABRIC","operations","_this","viewDescriptor","push","shadowNodeWrapper","length","queueMicrotask","flush","_updatePropsFabric","_this2","tag","name","_updatePropsPaper","runOnUIImmediately"],"sources":["UpdateProps.ts"],"sourcesContent":["import type { MutableRefObject } from 'react';\nimport { processColor } from './Colors';\nimport type {\n  AnimatedStyle,\n  ShadowNodeWrapper,\n  SharedValue,\n  StyleProps,\n} from './commonTypes';\nimport { makeShareable } from './core';\nimport type { Descriptor } from './hook/commonTypes';\nimport { _updatePropsJS } from './js-reanimated';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport type { ViewRefSet } from './ViewDescriptorsSet';\nimport { runOnUIImmediately } from './threads';\n\n// copied from react-native/Libraries/Components/View/ReactNativeStyleAttributes\nexport const colorProps = [\n  'backgroundColor',\n  'borderBottomColor',\n  'borderColor',\n  'borderLeftColor',\n  'borderRightColor',\n  'borderTopColor',\n  'borderStartColor',\n  'borderEndColor',\n  'color',\n  'shadowColor',\n  'textDecorationColor',\n  'tintColor',\n  'textShadowColor',\n  'overlayColor',\n];\n\nexport const ColorProperties = makeShareable(colorProps);\n\nexport let updateProps: (\n  viewDescriptor: SharedValue<Descriptor[]>,\n  updates: StyleProps | AnimatedStyle,\n  maybeViewRef: ViewRefSet<any> | undefined\n) => void;\n\nif (shouldBeUseWeb()) {\n  updateProps = (_, updates, maybeViewRef) => {\n    'worklet';\n    if (maybeViewRef) {\n      maybeViewRef.items.forEach((item, _) => {\n        _updatePropsJS(updates, item);\n      });\n    }\n  };\n} else {\n  updateProps = (viewDescriptors, updates) => {\n    'worklet';\n    for (const key in updates) {\n      if (ColorProperties.indexOf(key) !== -1) {\n        updates[key] = processColor(updates[key]);\n      }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    global.UpdatePropsManager!.update(viewDescriptors, updates);\n  };\n}\n\nexport const updatePropsJestWrapper = (\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updates: AnimatedStyle,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animatedStyle: MutableRefObject<AnimatedStyle>,\n  adapters: ((updates: AnimatedStyle) => void)[]\n): void => {\n  adapters.forEach((adapter) => {\n    adapter(updates);\n  });\n  animatedStyle.current.value = {\n    ...animatedStyle.current.value,\n    ...updates,\n  };\n\n  updateProps(viewDescriptors, updates, maybeViewRef);\n};\n\nexport default updateProps;\n\nconst createUpdatePropsManager = global._IS_FABRIC\n  ? () => {\n      'worklet';\n      // Fabric\n      const operations: {\n        shadowNodeWrapper: ShadowNodeWrapper;\n        updates: StyleProps | AnimatedStyle;\n      }[] = [];\n      return {\n        update(\n          viewDescriptors: SharedValue<Descriptor[]>,\n          updates: StyleProps | AnimatedStyle\n        ) {\n          viewDescriptors.value.forEach((viewDescriptor) => {\n            operations.push({\n              shadowNodeWrapper: viewDescriptor.shadowNodeWrapper,\n              updates,\n            });\n            if (operations.length === 1) {\n              queueMicrotask(this.flush);\n            }\n          });\n        },\n        flush() {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          _updatePropsFabric!(operations);\n          operations.length = 0;\n        },\n      };\n    }\n  : () => {\n      'worklet';\n      // Paper\n      const operations: {\n        tag: number;\n        name: string;\n        updates: StyleProps | AnimatedStyle;\n      }[] = [];\n      return {\n        update(\n          viewDescriptors: SharedValue<Descriptor[]>,\n          updates: StyleProps | AnimatedStyle\n        ) {\n          viewDescriptors.value.forEach((viewDescriptor) => {\n            operations.push({\n              tag: viewDescriptor.tag,\n              name: viewDescriptor.name || 'RCTView',\n              updates,\n            });\n            if (operations.length === 1) {\n              queueMicrotask(this.flush);\n            }\n          });\n        },\n        flush() {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          _updatePropsPaper!(operations);\n          operations.length = 0;\n        },\n      };\n    };\n\nrunOnUIImmediately(() => {\n  'worklet';\n  global.UpdatePropsManager = createUpdatePropsManager();\n})();\n\nexport interface UpdatePropsManager {\n  update(\n    viewDescriptors: SharedValue<Descriptor[]>,\n    updates: StyleProps | AnimatedStyle\n  ): void;\n  flush(): void;\n}\n"],"mappings":"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"}