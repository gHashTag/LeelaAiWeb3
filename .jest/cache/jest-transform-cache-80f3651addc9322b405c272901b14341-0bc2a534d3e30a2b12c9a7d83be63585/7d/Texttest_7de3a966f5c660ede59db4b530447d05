ad842ce7a6b85f82d9c11b6d4ec68cf0
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/Text/Text.test.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
var react_native_1 = require("@testing-library/react-native");
var _1 = require("./");
var react_1 = __importDefault(require("react"));
describe('Text Component', function () {
  it('renders correctly with default props', function () {
    var _ref = (0, react_native_1.render)((0, _jsxRuntime.jsx)(_1.Text, {
        title: "Test Title"
      })),
      getByText = _ref.getByText;
    expect(getByText('Test Title')).toBeTruthy();
  });
  it('applies the correct style based on the "h" prop', function () {
    var styles = ['h0', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'h7', 'h8', 'h9', 'h10', 'h11', 'h12'];
    styles.forEach(function (style) {
      var _ref2 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(_1.Text, {
          title: "Test Title",
          h: style
        })),
        getByTestId = _ref2.getByTestId;
      var receivedStyle = getByTestId('text-component').props.style;
      console.log('Received Style:', receivedStyle);
      expect(receivedStyle).toEqual(expect.objectContaining(_1.textStyles[style]));
    });
  });
  it('applies the oneColor prop correctly', function () {
    var _ref3 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(_1.Text, {
        title: "Test Title",
        oneColor: "blue"
      })),
      getByTestId = _ref3.getByTestId;
    var textComponent = getByTestId('text-component');
    expect(textComponent.props.style[0]).toMatchObject({
      color: 'blue'
    });
  });
  it('applies the textStyle prop correctly', function () {
    var customTextStyle = {
      fontWeight: 'bold',
      fontStyle: 'italic'
    };
    var _ref4 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(_1.Text, {
        title: "Test Title",
        textStyle: customTextStyle
      })),
      getByTestId = _ref4.getByTestId;
    var textComponent = getByTestId('text-component');
    expect(textComponent.props.style[1]).toMatchObject(customTextStyle);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF9uYXRpdmVfMSIsInJlcXVpcmUiLCJfMSIsInJlYWN0XzEiLCJfX2ltcG9ydERlZmF1bHQiLCJkZXNjcmliZSIsIml0IiwiX3JlZiIsInJlbmRlciIsIl9qc3hSdW50aW1lIiwianN4IiwiVGV4dCIsInRpdGxlIiwiZ2V0QnlUZXh0IiwiZXhwZWN0IiwidG9CZVRydXRoeSIsInN0eWxlcyIsImZvckVhY2giLCJzdHlsZSIsIl9yZWYyIiwiaCIsImdldEJ5VGVzdElkIiwicmVjZWl2ZWRTdHlsZSIsInByb3BzIiwiY29uc29sZSIsImxvZyIsInRvRXF1YWwiLCJvYmplY3RDb250YWluaW5nIiwidGV4dFN0eWxlcyIsIl9yZWYzIiwib25lQ29sb3IiLCJ0ZXh0Q29tcG9uZW50IiwidG9NYXRjaE9iamVjdCIsImNvbG9yIiwiY3VzdG9tVGV4dFN0eWxlIiwiZm9udFdlaWdodCIsImZvbnRTdHlsZSIsIl9yZWY0IiwidGV4dFN0eWxlIl0sInNvdXJjZXMiOlsiL1VzZXJzL3BsYXlyYS9MZWVsYUFpV2ViMy9zcmMvY29tcG9uZW50cy9UZXh0L1RleHQudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtyZW5kZXJ9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJ1xuaW1wb3J0IHtUZXh0LCBoVCwgdGV4dFN0eWxlc30gZnJvbSAnLi8nIC8vIFJlcGxhY2Ugd2l0aCB5b3VyIGFjdHVhbCBmaWxlIHBhdGhcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7VGV4dFN0eWxlfSBmcm9tICdyZWFjdC1uYXRpdmUnXG5cbmRlc2NyaWJlKCdUZXh0IENvbXBvbmVudCcsICgpID0+IHtcbiAgaXQoJ3JlbmRlcnMgY29ycmVjdGx5IHdpdGggZGVmYXVsdCBwcm9wcycsICgpID0+IHtcbiAgICBjb25zdCB7Z2V0QnlUZXh0fSA9IHJlbmRlcig8VGV4dCB0aXRsZT1cIlRlc3QgVGl0bGVcIiAvPilcbiAgICBleHBlY3QoZ2V0QnlUZXh0KCdUZXN0IFRpdGxlJykpLnRvQmVUcnV0aHkoKVxuICB9KVxuXG4gIGl0KCdhcHBsaWVzIHRoZSBjb3JyZWN0IHN0eWxlIGJhc2VkIG9uIHRoZSBcImhcIiBwcm9wJywgKCkgPT4ge1xuICAgIGNvbnN0IHN0eWxlczogaFRbXSA9IFtcbiAgICAgICdoMCcsXG4gICAgICAnaDEnLFxuICAgICAgJ2gyJyxcbiAgICAgICdoMycsXG4gICAgICAnaDQnLFxuICAgICAgJ2g1JyxcbiAgICAgICdoNicsXG4gICAgICAnaDcnLFxuICAgICAgJ2g4JyxcbiAgICAgICdoOScsXG4gICAgICAnaDEwJyxcbiAgICAgICdoMTEnLFxuICAgICAgJ2gxMicsXG4gICAgXVxuICAgIHN0eWxlcy5mb3JFYWNoKHN0eWxlID0+IHtcbiAgICAgIGNvbnN0IHtnZXRCeVRlc3RJZH0gPSByZW5kZXIoPFRleHQgdGl0bGU9XCJUZXN0IFRpdGxlXCIgaD17c3R5bGV9IC8+KVxuICAgICAgY29uc3QgcmVjZWl2ZWRTdHlsZSA9IGdldEJ5VGVzdElkKCd0ZXh0LWNvbXBvbmVudCcpLnByb3BzLnN0eWxlXG4gICAgICBjb25zb2xlLmxvZygnUmVjZWl2ZWQgU3R5bGU6JywgcmVjZWl2ZWRTdHlsZSkgLy8g0JTQvtCx0LDQstGM0YLQtSDRjdGC0YMg0YHRgtGA0L7QutGDXG4gICAgICBleHBlY3QocmVjZWl2ZWRTdHlsZSkudG9FcXVhbChleHBlY3Qub2JqZWN0Q29udGFpbmluZyh0ZXh0U3R5bGVzW3N0eWxlXSkpXG4gICAgfSlcbiAgfSlcblxuICBpdCgnYXBwbGllcyB0aGUgb25lQ29sb3IgcHJvcCBjb3JyZWN0bHknLCAoKSA9PiB7XG4gICAgY29uc3Qge2dldEJ5VGVzdElkfSA9IHJlbmRlcig8VGV4dCB0aXRsZT1cIlRlc3QgVGl0bGVcIiBvbmVDb2xvcj1cImJsdWVcIiAvPilcbiAgICBjb25zdCB0ZXh0Q29tcG9uZW50ID0gZ2V0QnlUZXN0SWQoJ3RleHQtY29tcG9uZW50JylcbiAgICBleHBlY3QodGV4dENvbXBvbmVudC5wcm9wcy5zdHlsZVswXSkudG9NYXRjaE9iamVjdCh7XG4gICAgICBjb2xvcjogJ2JsdWUnLFxuICAgIH0pXG4gIH0pXG5cbiAgaXQoJ2FwcGxpZXMgdGhlIHRleHRTdHlsZSBwcm9wIGNvcnJlY3RseScsICgpID0+IHtcbiAgICBjb25zdCBjdXN0b21UZXh0U3R5bGU6IFRleHRTdHlsZSA9IHtcbiAgICAgIGZvbnRXZWlnaHQ6ICdib2xkJyxcbiAgICAgIGZvbnRTdHlsZTogJ2l0YWxpYycsXG4gICAgfVxuICAgIGNvbnN0IHtnZXRCeVRlc3RJZH0gPSByZW5kZXIoXG4gICAgICA8VGV4dCB0aXRsZT1cIlRlc3QgVGl0bGVcIiB0ZXh0U3R5bGU9e2N1c3RvbVRleHRTdHlsZX0gLz4sXG4gICAgKVxuICAgIGNvbnN0IHRleHRDb21wb25lbnQgPSBnZXRCeVRlc3RJZCgndGV4dC1jb21wb25lbnQnKVxuICAgIGV4cGVjdCh0ZXh0Q29tcG9uZW50LnByb3BzLnN0eWxlWzFdKS50b01hdGNoT2JqZWN0KGN1c3RvbVRleHRTdHlsZSlcbiAgfSlcbn0pXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBQSxjQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxFQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxPQUFBLEdBQUFDLGVBQUEsQ0FBQUgsT0FBQTtBQUdBSSxRQUFRLENBQUMsZ0JBQWdCLEVBQUUsWUFBSztFQUM5QkMsRUFBRSxDQUFDLHNDQUFzQyxFQUFFLFlBQUs7SUFDOUMsSUFBQUMsSUFBQSxHQUFvQixJQUFBUCxjQUFBLENBQUFRLE1BQU0sRUFBQyxJQUFBQyxXQUFBLENBQUFDLEdBQUEsRUFBQ1IsRUFBQSxDQUFBUyxJQUFJO1FBQUNDLEtBQUssRUFBQztNQUFZLEVBQUcsQ0FBQztNQUFoREMsU0FBUyxHQUFBTixJQUFBLENBQVRNLFNBQVM7SUFDaEJDLE1BQU0sQ0FBQ0QsU0FBUyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUNFLFVBQVUsRUFBRTtFQUM5QyxDQUFD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