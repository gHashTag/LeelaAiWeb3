2a0b951fc798007a046f29bca0a5b015
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
var _this = this,
  _jsxFileName = "/Users/playra/LeelaAiWeb3/src/components/Dice/Dice.test.tsx";
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
var react_1 = __importDefault(require("react"));
var react_native_1 = require("@testing-library/react-native");
var _1 = require("./");
describe('Dice Component', function () {
  var mockProps = {
    count: 3,
    players: 4,
    disabled: false,
    canGo: true,
    isReported: false,
    updateStep: jest.fn(),
    random: jest.fn()
  };
  it('renders correctly with the provided props', function () {
    var _ref = (0, react_native_1.render)((0, _jsxRuntime.jsx)(_1.Dice, Object.assign({}, mockProps))),
      getByTestId = _ref.getByTestId;
    expect(getByTestId('dice-component')).toBeDefined();
  });
  it('calls the random function and updateStep on press when not disabled', function () {
    var _ref2 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(_1.Dice, Object.assign({}, mockProps))),
      getByTestId = _ref2.getByTestId;
    react_native_1.fireEvent.press(getByTestId('dice-component'));
    expect(mockProps.random).toHaveBeenCalledTimes(1);
    expect(mockProps.updateStep).toHaveBeenCalledTimes(1);
  });
  it('does not call the random function and updateStep on press when disabled', function () {
    var _ref3 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(_1.Dice, Object.assign({}, mockProps, {
        disabled: true
      }))),
      getByTestId = _ref3.getByTestId;
    react_native_1.fireEvent.press(getByTestId('dice-component'));
    expect(mockProps.random).toHaveBeenCalledTimes(0);
    expect(mockProps.updateStep).toHaveBeenCalledTimes(0);
  });
  it('does not call the random function and updateStep on press when canGo is false', function () {
    var _ref4 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(_1.Dice, Object.assign({}, mockProps, {
        canGo: false
      }))),
      getByTestId = _ref4.getByTestId;
    react_native_1.fireEvent.press(getByTestId('dice-component'));
    expect(mockProps.random).toHaveBeenCalledTimes(0);
    expect(mockProps.updateStep).toHaveBeenCalledTimes(0);
  });
  it('does not call the random function and updateStep on press when isReported is true', function () {
    var _ref5 = (0, react_native_1.render)((0, _jsxRuntime.jsx)(_1.Dice, Object.assign({}, mockProps, {
        isReported: true
      }))),
      getByTestId = _ref5.getByTestId;
    react_native_1.fireEvent.press(getByTestId('dice-component'));
    expect(mockProps.random).toHaveBeenCalledTimes(0);
    expect(mockProps.updateStep).toHaveBeenCalledTimes(0);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwiXzEiLCJkZXNjcmliZSIsIm1vY2tQcm9wcyIsImNvdW50IiwicGxheWVycyIsImRpc2FibGVkIiwiY2FuR28iLCJpc1JlcG9ydGVkIiwidXBkYXRlU3RlcCIsImplc3QiLCJmbiIsInJhbmRvbSIsIml0IiwiX3JlZiIsInJlbmRlciIsIl9qc3hSdW50aW1lIiwianN4IiwiRGljZSIsIk9iamVjdCIsImFzc2lnbiIsImdldEJ5VGVzdElkIiwiZXhwZWN0IiwidG9CZURlZmluZWQiLCJfcmVmMiIsImZpcmVFdmVudCIsInByZXNzIiwidG9IYXZlQmVlbkNhbGxlZFRpbWVzIiwiX3JlZjMiLCJfcmVmNCIsIl9yZWY1Il0sInNvdXJjZXMiOlsiL1VzZXJzL3BsYXlyYS9MZWVsYUFpV2ViMy9zcmMvY29tcG9uZW50cy9EaWNlL0RpY2UudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHtyZW5kZXIsIGZpcmVFdmVudH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnXG5pbXBvcnQge0RpY2UsIERpY2VQcm9wc30gZnJvbSAnLi8nIC8vIFJlcGxhY2Ugd2l0aCB0aGUgYWN0dWFsIHBhdGggdG8geW91ciBEaWNlIGNvbXBvbmVudFxuXG5kZXNjcmliZSgnRGljZSBDb21wb25lbnQnLCAoKSA9PiB7XG4gIGNvbnN0IG1vY2tQcm9wczogRGljZVByb3BzID0ge1xuICAgIGNvdW50OiAzLFxuICAgIHBsYXllcnM6IDQsXG4gICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgIGNhbkdvOiB0cnVlLFxuICAgIGlzUmVwb3J0ZWQ6IGZhbHNlLFxuICAgIHVwZGF0ZVN0ZXA6IGplc3QuZm4oKSxcbiAgICByYW5kb206IGplc3QuZm4oKSxcbiAgfVxuXG4gIGl0KCdyZW5kZXJzIGNvcnJlY3RseSB3aXRoIHRoZSBwcm92aWRlZCBwcm9wcycsICgpID0+IHtcbiAgICBjb25zdCB7Z2V0QnlUZXN0SWR9ID0gcmVuZGVyKDxEaWNlIHsuLi5tb2NrUHJvcHN9IC8+KVxuICAgIGV4cGVjdChnZXRCeVRlc3RJZCgnZGljZS1jb21wb25lbnQnKSkudG9CZURlZmluZWQoKVxuICB9KVxuXG4gIGl0KCdjYWxscyB0aGUgcmFuZG9tIGZ1bmN0aW9uIGFuZCB1cGRhdGVTdGVwIG9uIHByZXNzIHdoZW4gbm90IGRpc2FibGVkJywgKCkgPT4ge1xuICAgIGNvbnN0IHtnZXRCeVRlc3RJZH0gPSByZW5kZXIoPERpY2Ugey4uLm1vY2tQcm9wc30gLz4pXG4gICAgZmlyZUV2ZW50LnByZXNzKGdldEJ5VGVzdElkKCdkaWNlLWNvbXBvbmVudCcpKVxuICAgIGV4cGVjdChtb2NrUHJvcHMucmFuZG9tKS50b0hhdmVCZWVuQ2FsbGVkVGltZXMoMSlcbiAgICBleHBlY3QobW9ja1Byb3BzLnVwZGF0ZVN0ZXApLnRvSGF2ZUJlZW5DYWxsZWRUaW1lcygxKVxuICB9KVxuXG4gIGl0KCdkb2VzIG5vdCBjYWxsIHRoZSByYW5kb20gZnVuY3Rpb24gYW5kIHVwZGF0ZVN0ZXAgb24gcHJlc3Mgd2hlbiBkaXNhYmxlZCcsICgpID0+IHtcbiAgICBjb25zdCB7Z2V0QnlUZXN0SWR9ID0gcmVuZGVyKDxEaWNlIHsuLi5tb2NrUHJvcHN9IGRpc2FibGVkPXt0cnVlfSAvPilcbiAgICBmaXJlRXZlbnQucHJlc3MoZ2V0QnlUZXN0SWQoJ2RpY2UtY29tcG9uZW50JykpXG4gICAgZXhwZWN0KG1vY2tQcm9wcy5yYW5kb20pLnRvSGF2ZUJlZW5DYWxsZWRUaW1lcygwKVxuICAgIGV4cGVjdChtb2NrUHJvcHMudXBkYXRlU3RlcCkudG9IYXZlQmVlbkNhbGxlZFRpbWVzKDApXG4gIH0pXG5cbiAgaXQoJ2RvZXMgbm90IGNhbGwgdGhlIHJhbmRvbSBmdW5jdGlvbiBhbmQgdXBkYXRlU3RlcCBvbiBwcmVzcyB3aGVuIGNhbkdvIGlzIGZhbHNlJywgKCkgPT4ge1xuICAgIGNvbnN0IHtnZXRCeVRlc3RJZH0gPSByZW5kZXIoPERpY2Ugey4uLm1vY2tQcm9wc30gY2FuR289e2ZhbHNlfSAvPilcbiAgICBmaXJlRXZlbnQucHJlc3MoZ2V0QnlUZXN0SWQoJ2RpY2UtY29tcG9uZW50JykpXG4gICAgZXhwZWN0KG1vY2tQcm9wcy5yYW5kb20pLnRvSGF2ZUJlZW5DYWxsZWRUaW1lcygwKVxuICAgIGV4cGVjdChtb2NrUHJvcHMudXBkYXRlU3RlcCkudG9IYXZlQmVlbkNhbGxlZFRpbWVzKDApXG4gIH0pXG5cbiAgaXQoJ2RvZXMgbm90IGNhbGwgdGhlIHJhbmRvbSBmdW5jdGlvbiBhbmQgdXBkYXRlU3RlcCBvbiBwcmVzcyB3aGVuIGlzUmVwb3J0ZWQgaXMgdHJ1ZScsICgpID0+IHtcbiAgICBjb25zdCB7Z2V0QnlUZXN0SWR9ID0gcmVuZGVyKDxEaWNlIHsuLi5tb2NrUHJvcHN9IGlzUmVwb3J0ZWQ9e3RydWV9IC8+KVxuICAgIGZpcmVFdmVudC5wcmVzcyhnZXRCeVRlc3RJZCgnZGljZS1jb21wb25lbnQnKSlcbiAgICBleHBlY3QobW9ja1Byb3BzLnJhbmRvbSkudG9IYXZlQmVlbkNhbGxlZFRpbWVzKDApXG4gICAgZXhwZWN0KG1vY2tQcm9wcy51cGRhdGVTdGVwKS50b0hhdmVCZWVuQ2FsbGVkVGltZXMoMClcbiAgfSlcblxuICAvLyBBZGQgbW9yZSB0ZXN0cyBiYXNlZCBvbiB5b3VyIGNvbXBvbmVudCdzIGJlaGF2aW9yIGFuZCByZXF1aXJlbWVudHNcbn0pXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBQSxPQUFBLEdBQUFDLGVBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGNBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLEVBQUEsR0FBQUYsT0FBQTtBQUVBRyxRQUFRLENBQUMsZ0JBQWdCLEVBQUUsWUFBSztFQUM5QixJQUFNQyxTQUFTLEdBQWM7SUFDM0JDLEtBQUssRUFBRSxDQUFDO0lBQ1JDLE9BQU8sRUFBRSxDQUFDO0lB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